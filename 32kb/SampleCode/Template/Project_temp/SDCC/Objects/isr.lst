                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #13855 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module isr
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _WKT_ISR
                                     13 	.globl _Timer3_ISR
                                     14 	.globl _UART1_ISR
                                     15 	.globl _PWM_Brake_ISR
                                     16 	.globl _Capture_ISR
                                     17 	.globl _ADC_ISR
                                     18 	.globl _WDT_ISR
                                     19 	.globl _SPI_ISR
                                     20 	.globl _BOD_ISR
                                     21 	.globl _Pin_INT_ISR
                                     22 	.globl _I2C_ISR
                                     23 	.globl _Timer2_ISR
                                     24 	.globl _UART0_ISR
                                     25 	.globl _Timer1_ISR
                                     26 	.globl _INT1_ISR
                                     27 	.globl _Timer0_ISR
                                     28 	.globl _INT0_ISR
                                     29 	.globl _MOSI
                                     30 	.globl _P00
                                     31 	.globl _MISO
                                     32 	.globl _P01
                                     33 	.globl _RXD_1
                                     34 	.globl _P02
                                     35 	.globl _P03
                                     36 	.globl _STADC
                                     37 	.globl _P04
                                     38 	.globl _P05
                                     39 	.globl _TXD
                                     40 	.globl _P06
                                     41 	.globl _RXD
                                     42 	.globl _P07
                                     43 	.globl _IT0
                                     44 	.globl _IE0
                                     45 	.globl _IT1
                                     46 	.globl _IE1
                                     47 	.globl _TR0
                                     48 	.globl _TF0
                                     49 	.globl _TR1
                                     50 	.globl _TF1
                                     51 	.globl _P10
                                     52 	.globl _P11
                                     53 	.globl _P12
                                     54 	.globl _SCL
                                     55 	.globl _P13
                                     56 	.globl _SDA
                                     57 	.globl _P14
                                     58 	.globl _P15
                                     59 	.globl _TXD_1
                                     60 	.globl _P16
                                     61 	.globl _P17
                                     62 	.globl _RI
                                     63 	.globl _TI
                                     64 	.globl _RB8
                                     65 	.globl _TB8
                                     66 	.globl _REN
                                     67 	.globl _SM2
                                     68 	.globl _SM1
                                     69 	.globl _FE
                                     70 	.globl _SM0
                                     71 	.globl _P20
                                     72 	.globl _EX0
                                     73 	.globl _ET0
                                     74 	.globl _EX1
                                     75 	.globl _ET1
                                     76 	.globl _ES
                                     77 	.globl _EBOD
                                     78 	.globl _EADC
                                     79 	.globl _EA
                                     80 	.globl _P30
                                     81 	.globl _P31
                                     82 	.globl _P32
                                     83 	.globl _P33
                                     84 	.globl _P34
                                     85 	.globl _P35
                                     86 	.globl _P36
                                     87 	.globl _P37
                                     88 	.globl _PX0
                                     89 	.globl _PT0
                                     90 	.globl _PX1
                                     91 	.globl _PT1
                                     92 	.globl _PS
                                     93 	.globl _PBOD
                                     94 	.globl _PADC
                                     95 	.globl _I2CPX
                                     96 	.globl _AA
                                     97 	.globl _SI
                                     98 	.globl _STO
                                     99 	.globl _STA
                                    100 	.globl _I2CEN
                                    101 	.globl _CM_RL2
                                    102 	.globl _TR2
                                    103 	.globl _TF2
                                    104 	.globl _P
                                    105 	.globl _OV
                                    106 	.globl _RS0
                                    107 	.globl _RS1
                                    108 	.globl _F0
                                    109 	.globl _AC
                                    110 	.globl _CY
                                    111 	.globl _CLRPWM
                                    112 	.globl _PWMF
                                    113 	.globl _LOAD
                                    114 	.globl _PWMRUN
                                    115 	.globl _ADCHS0
                                    116 	.globl _ADCHS1
                                    117 	.globl _ADCHS2
                                    118 	.globl _ADCHS3
                                    119 	.globl _ETGSEL0
                                    120 	.globl _ETGSEL1
                                    121 	.globl _ADCS
                                    122 	.globl _ADCF
                                    123 	.globl _RI_1
                                    124 	.globl _TI_1
                                    125 	.globl _RB8_1
                                    126 	.globl _TB8_1
                                    127 	.globl _REN_1
                                    128 	.globl _SM2_1
                                    129 	.globl _SM1_1
                                    130 	.globl _FE_1
                                    131 	.globl _SM0_1
                                    132 	.globl _PIPS6
                                    133 	.globl _PIPS5
                                    134 	.globl _PIPS4
                                    135 	.globl _PIPS3
                                    136 	.globl _PIPS2
                                    137 	.globl _PIPS1
                                    138 	.globl _PIPS0
                                    139 	.globl _PIPS7
                                    140 	.globl _SC2CR1
                                    141 	.globl _SC2CR0
                                    142 	.globl _SC1CR1
                                    143 	.globl _SC1CR0
                                    144 	.globl _SC0CR1
                                    145 	.globl _SC0CR0
                                    146 	.globl _SC2TSR
                                    147 	.globl _SC2IS
                                    148 	.globl _SC2IE
                                    149 	.globl _SC2ETURD1
                                    150 	.globl _SC2ETURD0
                                    151 	.globl _SC2EGT
                                    152 	.globl _SC2DR
                                    153 	.globl _SC1TSR
                                    154 	.globl _SC1IS
                                    155 	.globl _SC1IE
                                    156 	.globl _SC1ETURD1
                                    157 	.globl _SC1ETURD0
                                    158 	.globl _SC1EGT
                                    159 	.globl _SC1DR
                                    160 	.globl _SC0TSR
                                    161 	.globl _SC0IS
                                    162 	.globl _SC0IE
                                    163 	.globl _SC0ETURD1
                                    164 	.globl _SC0ETURD0
                                    165 	.globl _SC0EGT
                                    166 	.globl _SC0DR
                                    167 	.globl _XTLCON
                                    168 	.globl _PWM3INTC
                                    169 	.globl _PWM3CON1
                                    170 	.globl _PWM3CON0
                                    171 	.globl _PWM3C1L
                                    172 	.globl _PWM3C0L
                                    173 	.globl _PWM3PL
                                    174 	.globl _EIPH2
                                    175 	.globl _EIP2
                                    176 	.globl _PWM3MEN
                                    177 	.globl _PWM3MD
                                    178 	.globl _PWM3C1H
                                    179 	.globl _PWM3C0H
                                    180 	.globl _PWM3PH
                                    181 	.globl _PWM2INTC
                                    182 	.globl _PWM2CON1
                                    183 	.globl _PWM2CON0
                                    184 	.globl _PWM2C1L
                                    185 	.globl _PWM2C0L
                                    186 	.globl _PWM2PL
                                    187 	.globl _PWM2MEN
                                    188 	.globl _PWM2MD
                                    189 	.globl _PWM2C1H
                                    190 	.globl _PWM2C0H
                                    191 	.globl _PWM2PH
                                    192 	.globl _PIOCON2
                                    193 	.globl _PWM1INTC
                                    194 	.globl _PWM1CON1
                                    195 	.globl _PWM1CON0
                                    196 	.globl _PWM1C1L
                                    197 	.globl _PWM1C0L
                                    198 	.globl _PWM1PL
                                    199 	.globl _PWM1MEN
                                    200 	.globl _PWM1MD
                                    201 	.globl _PWM1C1H
                                    202 	.globl _PWM1C0H
                                    203 	.globl _PWM1PH
                                    204 	.globl _AUXR8
                                    205 	.globl _AUXR7
                                    206 	.globl _AUXR6
                                    207 	.globl _AUXR5
                                    208 	.globl _AUXR4
                                    209 	.globl _AUXR3
                                    210 	.globl _AUXR2
                                    211 	.globl _P3DW
                                    212 	.globl _P2DW
                                    213 	.globl _P1DW
                                    214 	.globl _P0DW
                                    215 	.globl _AINDIDS1
                                    216 	.globl _RWKH
                                    217 	.globl _P3UP
                                    218 	.globl _P2UP
                                    219 	.globl _P1UP
                                    220 	.globl _P0UP
                                    221 	.globl _ADCSR
                                    222 	.globl _ADCCN
                                    223 	.globl _ADCSN
                                    224 	.globl _P2S
                                    225 	.globl _P2SR
                                    226 	.globl _P2M2
                                    227 	.globl _P2M1
                                    228 	.globl _ADCCON3
                                    229 	.globl _ADCBAH
                                    230 	.globl _ADCBAL
                                    231 	.globl _LVRDIS
                                    232 	.globl _SPCR2
                                    233 	.globl _PWM0C5L
                                    234 	.globl _PWM0C4L
                                    235 	.globl _PIOCON1
                                    236 	.globl _PWM0C5H
                                    237 	.globl _PWM0C4H
                                    238 	.globl _PWM0INTC
                                    239 	.globl _P1SR
                                    240 	.globl _P1S
                                    241 	.globl _P0SR
                                    242 	.globl _P0S
                                    243 	.globl _P3SR
                                    244 	.globl _P3S
                                    245 	.globl _EIPH1
                                    246 	.globl _EIP1
                                    247 	.globl _PORDIS
                                    248 	.globl _PWM0MD
                                    249 	.globl _PWM0MEN
                                    250 	.globl _PWM0DTCNT
                                    251 	.globl _PWM0DTEN
                                    252 	.globl _SCON_1
                                    253 	.globl _EIPH
                                    254 	.globl _AINDIDS0
                                    255 	.globl _SPDR
                                    256 	.globl _SPSR
                                    257 	.globl _SPCR
                                    258 	.globl _CAPCON4
                                    259 	.globl _CAPCON3
                                    260 	.globl _B
                                    261 	.globl _EIP
                                    262 	.globl _C2H
                                    263 	.globl _C2L
                                    264 	.globl _PIF
                                    265 	.globl _PIPEN
                                    266 	.globl _PINEN
                                    267 	.globl _PICON
                                    268 	.globl _ADCCON0
                                    269 	.globl _C1H
                                    270 	.globl _C1L
                                    271 	.globl _C0H
                                    272 	.globl _C0L
                                    273 	.globl _ADCDLY
                                    274 	.globl _ADCCON2
                                    275 	.globl _ADCCON1
                                    276 	.globl _ACC
                                    277 	.globl _PWM0CON1
                                    278 	.globl _PIOCON0
                                    279 	.globl _PWM0C3L
                                    280 	.globl _PWM0C2L
                                    281 	.globl _PWM0C1L
                                    282 	.globl _PWM0C0L
                                    283 	.globl _PWM0PL
                                    284 	.globl _PWM0CON0
                                    285 	.globl _PWM0FBD
                                    286 	.globl _PNP
                                    287 	.globl _PWM0C3H
                                    288 	.globl _PWM0C2H
                                    289 	.globl _PWM0C1H
                                    290 	.globl _PWM0C0H
                                    291 	.globl _PWM0PH
                                    292 	.globl _PSW
                                    293 	.globl _ADCMPH
                                    294 	.globl _ADCMPL
                                    295 	.globl _TH2
                                    296 	.globl _TL2
                                    297 	.globl _RCMP2H
                                    298 	.globl _RCMP2L
                                    299 	.globl _T2MOD
                                    300 	.globl _T2CON
                                    301 	.globl _TA
                                    302 	.globl _RH3
                                    303 	.globl _RL3
                                    304 	.globl _T3CON
                                    305 	.globl _ADCRH
                                    306 	.globl _ADCRL
                                    307 	.globl _I2ADDR
                                    308 	.globl _I2CON
                                    309 	.globl _I2TOC
                                    310 	.globl _I2CLK
                                    311 	.globl _I2STAT
                                    312 	.globl _I2DAT
                                    313 	.globl _SADDR_1
                                    314 	.globl _SADEN_1
                                    315 	.globl _SADEN
                                    316 	.globl _IP
                                    317 	.globl _PWMINTC
                                    318 	.globl _IPH
                                    319 	.globl _TOE
                                    320 	.globl _P1M2
                                    321 	.globl _P1M1
                                    322 	.globl _P0M2
                                    323 	.globl _P0M1
                                    324 	.globl _P3
                                    325 	.globl _IAPCN
                                    326 	.globl _IAPFD
                                    327 	.globl _P3M2
                                    328 	.globl _P3M1
                                    329 	.globl _BODCON1
                                    330 	.globl _WDCON
                                    331 	.globl _SADDR
                                    332 	.globl _IE
                                    333 	.globl _IAPAH
                                    334 	.globl _IAPAL
                                    335 	.globl _IAPUEN
                                    336 	.globl _IAPTRG
                                    337 	.globl _BODCON0
                                    338 	.globl _AUXR1
                                    339 	.globl _P2
                                    340 	.globl _CHPCON
                                    341 	.globl _EIE1
                                    342 	.globl _EIE
                                    343 	.globl _SBUF_1
                                    344 	.globl _SBUF
                                    345 	.globl _SCON
                                    346 	.globl _CKEN
                                    347 	.globl _CKSWT
                                    348 	.globl _CKDIV
                                    349 	.globl _CAPCON2
                                    350 	.globl _CAPCON1
                                    351 	.globl _CAPCON0
                                    352 	.globl _SFRS
                                    353 	.globl _P1
                                    354 	.globl _WKCON
                                    355 	.globl _CKCON
                                    356 	.globl _TH1
                                    357 	.globl _TH0
                                    358 	.globl _TL1
                                    359 	.globl _TL0
                                    360 	.globl _TMOD
                                    361 	.globl _TCON
                                    362 	.globl _PCON
                                    363 	.globl _RWK
                                    364 	.globl _RCTRIM1
                                    365 	.globl _RCTRIM0
                                    366 	.globl _DPH
                                    367 	.globl _DPL
                                    368 	.globl _SP
                                    369 	.globl _P0
                                    370 ;--------------------------------------------------------
                                    371 ; special function registers
                                    372 ;--------------------------------------------------------
                                    373 	.area RSEG    (ABS,DATA)
      000000                        374 	.org 0x0000
                           000080   375 _P0	=	0x0080
                           000081   376 _SP	=	0x0081
                           000082   377 _DPL	=	0x0082
                           000083   378 _DPH	=	0x0083
                           000084   379 _RCTRIM0	=	0x0084
                           000085   380 _RCTRIM1	=	0x0085
                           000086   381 _RWK	=	0x0086
                           000087   382 _PCON	=	0x0087
                           000088   383 _TCON	=	0x0088
                           000089   384 _TMOD	=	0x0089
                           00008A   385 _TL0	=	0x008a
                           00008B   386 _TL1	=	0x008b
                           00008C   387 _TH0	=	0x008c
                           00008D   388 _TH1	=	0x008d
                           00008E   389 _CKCON	=	0x008e
                           00008F   390 _WKCON	=	0x008f
                           000090   391 _P1	=	0x0090
                           000091   392 _SFRS	=	0x0091
                           000092   393 _CAPCON0	=	0x0092
                           000093   394 _CAPCON1	=	0x0093
                           000094   395 _CAPCON2	=	0x0094
                           000095   396 _CKDIV	=	0x0095
                           000096   397 _CKSWT	=	0x0096
                           000097   398 _CKEN	=	0x0097
                           000098   399 _SCON	=	0x0098
                           000099   400 _SBUF	=	0x0099
                           00009A   401 _SBUF_1	=	0x009a
                           00009B   402 _EIE	=	0x009b
                           00009C   403 _EIE1	=	0x009c
                           00009F   404 _CHPCON	=	0x009f
                           0000A0   405 _P2	=	0x00a0
                           0000A2   406 _AUXR1	=	0x00a2
                           0000A3   407 _BODCON0	=	0x00a3
                           0000A4   408 _IAPTRG	=	0x00a4
                           0000A5   409 _IAPUEN	=	0x00a5
                           0000A6   410 _IAPAL	=	0x00a6
                           0000A7   411 _IAPAH	=	0x00a7
                           0000A8   412 _IE	=	0x00a8
                           0000A9   413 _SADDR	=	0x00a9
                           0000AA   414 _WDCON	=	0x00aa
                           0000AB   415 _BODCON1	=	0x00ab
                           0000AC   416 _P3M1	=	0x00ac
                           0000AD   417 _P3M2	=	0x00ad
                           0000AE   418 _IAPFD	=	0x00ae
                           0000AF   419 _IAPCN	=	0x00af
                           0000B0   420 _P3	=	0x00b0
                           0000B1   421 _P0M1	=	0x00b1
                           0000B2   422 _P0M2	=	0x00b2
                           0000B3   423 _P1M1	=	0x00b3
                           0000B4   424 _P1M2	=	0x00b4
                           0000B5   425 _TOE	=	0x00b5
                           0000B7   426 _IPH	=	0x00b7
                           0000B7   427 _PWMINTC	=	0x00b7
                           0000B8   428 _IP	=	0x00b8
                           0000B9   429 _SADEN	=	0x00b9
                           0000BA   430 _SADEN_1	=	0x00ba
                           0000BB   431 _SADDR_1	=	0x00bb
                           0000BC   432 _I2DAT	=	0x00bc
                           0000BD   433 _I2STAT	=	0x00bd
                           0000BE   434 _I2CLK	=	0x00be
                           0000BF   435 _I2TOC	=	0x00bf
                           0000C0   436 _I2CON	=	0x00c0
                           0000C1   437 _I2ADDR	=	0x00c1
                           0000C2   438 _ADCRL	=	0x00c2
                           0000C3   439 _ADCRH	=	0x00c3
                           0000C4   440 _T3CON	=	0x00c4
                           0000C5   441 _RL3	=	0x00c5
                           0000C6   442 _RH3	=	0x00c6
                           0000C7   443 _TA	=	0x00c7
                           0000C8   444 _T2CON	=	0x00c8
                           0000C9   445 _T2MOD	=	0x00c9
                           0000CA   446 _RCMP2L	=	0x00ca
                           0000CB   447 _RCMP2H	=	0x00cb
                           0000CC   448 _TL2	=	0x00cc
                           0000CD   449 _TH2	=	0x00cd
                           0000CE   450 _ADCMPL	=	0x00ce
                           0000CF   451 _ADCMPH	=	0x00cf
                           0000D0   452 _PSW	=	0x00d0
                           0000D1   453 _PWM0PH	=	0x00d1
                           0000D2   454 _PWM0C0H	=	0x00d2
                           0000D3   455 _PWM0C1H	=	0x00d3
                           0000D4   456 _PWM0C2H	=	0x00d4
                           0000D5   457 _PWM0C3H	=	0x00d5
                           0000D6   458 _PNP	=	0x00d6
                           0000D7   459 _PWM0FBD	=	0x00d7
                           0000D8   460 _PWM0CON0	=	0x00d8
                           0000D9   461 _PWM0PL	=	0x00d9
                           0000DA   462 _PWM0C0L	=	0x00da
                           0000DB   463 _PWM0C1L	=	0x00db
                           0000DC   464 _PWM0C2L	=	0x00dc
                           0000DD   465 _PWM0C3L	=	0x00dd
                           0000DE   466 _PIOCON0	=	0x00de
                           0000DF   467 _PWM0CON1	=	0x00df
                           0000E0   468 _ACC	=	0x00e0
                           0000E1   469 _ADCCON1	=	0x00e1
                           0000E2   470 _ADCCON2	=	0x00e2
                           0000E3   471 _ADCDLY	=	0x00e3
                           0000E4   472 _C0L	=	0x00e4
                           0000E5   473 _C0H	=	0x00e5
                           0000E6   474 _C1L	=	0x00e6
                           0000E7   475 _C1H	=	0x00e7
                           0000E8   476 _ADCCON0	=	0x00e8
                           0000E9   477 _PICON	=	0x00e9
                           0000EA   478 _PINEN	=	0x00ea
                           0000EB   479 _PIPEN	=	0x00eb
                           0000EC   480 _PIF	=	0x00ec
                           0000ED   481 _C2L	=	0x00ed
                           0000EE   482 _C2H	=	0x00ee
                           0000EF   483 _EIP	=	0x00ef
                           0000F0   484 _B	=	0x00f0
                           0000F1   485 _CAPCON3	=	0x00f1
                           0000F2   486 _CAPCON4	=	0x00f2
                           0000F3   487 _SPCR	=	0x00f3
                           0000F4   488 _SPSR	=	0x00f4
                           0000F5   489 _SPDR	=	0x00f5
                           0000F6   490 _AINDIDS0	=	0x00f6
                           0000F7   491 _EIPH	=	0x00f7
                           0000F8   492 _SCON_1	=	0x00f8
                           0000F9   493 _PWM0DTEN	=	0x00f9
                           0000FA   494 _PWM0DTCNT	=	0x00fa
                           0000FB   495 _PWM0MEN	=	0x00fb
                           0000FC   496 _PWM0MD	=	0x00fc
                           0000FD   497 _PORDIS	=	0x00fd
                           0000FE   498 _EIP1	=	0x00fe
                           0000FF   499 _EIPH1	=	0x00ff
                           0000AC   500 _P3S	=	0x00ac
                           0000AD   501 _P3SR	=	0x00ad
                           0000B1   502 _P0S	=	0x00b1
                           0000B2   503 _P0SR	=	0x00b2
                           0000B3   504 _P1S	=	0x00b3
                           0000B4   505 _P1SR	=	0x00b4
                           0000B7   506 _PWM0INTC	=	0x00b7
                           0000C4   507 _PWM0C4H	=	0x00c4
                           0000C5   508 _PWM0C5H	=	0x00c5
                           0000C6   509 _PIOCON1	=	0x00c6
                           0000CC   510 _PWM0C4L	=	0x00cc
                           0000CD   511 _PWM0C5L	=	0x00cd
                           0000F3   512 _SPCR2	=	0x00f3
                           0000FF   513 _LVRDIS	=	0x00ff
                           000084   514 _ADCBAL	=	0x0084
                           000085   515 _ADCBAH	=	0x0085
                           000086   516 _ADCCON3	=	0x0086
                           000089   517 _P2M1	=	0x0089
                           00008A   518 _P2M2	=	0x008a
                           00008B   519 _P2SR	=	0x008b
                           00008C   520 _P2S	=	0x008c
                           00008D   521 _ADCSN	=	0x008d
                           00008E   522 _ADCCN	=	0x008e
                           00008F   523 _ADCSR	=	0x008f
                           000092   524 _P0UP	=	0x0092
                           000093   525 _P1UP	=	0x0093
                           000094   526 _P2UP	=	0x0094
                           000095   527 _P3UP	=	0x0095
                           000097   528 _RWKH	=	0x0097
                           000099   529 _AINDIDS1	=	0x0099
                           00009A   530 _P0DW	=	0x009a
                           00009B   531 _P1DW	=	0x009b
                           00009C   532 _P2DW	=	0x009c
                           00009D   533 _P3DW	=	0x009d
                           0000A1   534 _AUXR2	=	0x00a1
                           0000A2   535 _AUXR3	=	0x00a2
                           0000A3   536 _AUXR4	=	0x00a3
                           0000A4   537 _AUXR5	=	0x00a4
                           0000A5   538 _AUXR6	=	0x00a5
                           0000A6   539 _AUXR7	=	0x00a6
                           0000A7   540 _AUXR8	=	0x00a7
                           0000A9   541 _PWM1PH	=	0x00a9
                           0000AA   542 _PWM1C0H	=	0x00aa
                           0000AB   543 _PWM1C1H	=	0x00ab
                           0000AC   544 _PWM1MD	=	0x00ac
                           0000AD   545 _PWM1MEN	=	0x00ad
                           0000B1   546 _PWM1PL	=	0x00b1
                           0000B2   547 _PWM1C0L	=	0x00b2
                           0000B3   548 _PWM1C1L	=	0x00b3
                           0000B4   549 _PWM1CON0	=	0x00b4
                           0000B5   550 _PWM1CON1	=	0x00b5
                           0000B6   551 _PWM1INTC	=	0x00b6
                           0000B7   552 _PIOCON2	=	0x00b7
                           0000B9   553 _PWM2PH	=	0x00b9
                           0000BA   554 _PWM2C0H	=	0x00ba
                           0000BB   555 _PWM2C1H	=	0x00bb
                           0000BC   556 _PWM2MD	=	0x00bc
                           0000BD   557 _PWM2MEN	=	0x00bd
                           0000C1   558 _PWM2PL	=	0x00c1
                           0000C2   559 _PWM2C0L	=	0x00c2
                           0000C3   560 _PWM2C1L	=	0x00c3
                           0000C4   561 _PWM2CON0	=	0x00c4
                           0000C5   562 _PWM2CON1	=	0x00c5
                           0000C6   563 _PWM2INTC	=	0x00c6
                           0000C9   564 _PWM3PH	=	0x00c9
                           0000CA   565 _PWM3C0H	=	0x00ca
                           0000CB   566 _PWM3C1H	=	0x00cb
                           0000CC   567 _PWM3MD	=	0x00cc
                           0000CD   568 _PWM3MEN	=	0x00cd
                           0000CE   569 _EIP2	=	0x00ce
                           0000CF   570 _EIPH2	=	0x00cf
                           0000D1   571 _PWM3PL	=	0x00d1
                           0000D2   572 _PWM3C0L	=	0x00d2
                           0000D3   573 _PWM3C1L	=	0x00d3
                           0000D4   574 _PWM3CON0	=	0x00d4
                           0000D5   575 _PWM3CON1	=	0x00d5
                           0000D6   576 _PWM3INTC	=	0x00d6
                           0000D7   577 _XTLCON	=	0x00d7
                           0000D9   578 _SC0DR	=	0x00d9
                           0000DA   579 _SC0EGT	=	0x00da
                           0000DB   580 _SC0ETURD0	=	0x00db
                           0000DC   581 _SC0ETURD1	=	0x00dc
                           0000DD   582 _SC0IE	=	0x00dd
                           0000DE   583 _SC0IS	=	0x00de
                           0000DF   584 _SC0TSR	=	0x00df
                           0000E1   585 _SC1DR	=	0x00e1
                           0000E2   586 _SC1EGT	=	0x00e2
                           0000E3   587 _SC1ETURD0	=	0x00e3
                           0000E4   588 _SC1ETURD1	=	0x00e4
                           0000E5   589 _SC1IE	=	0x00e5
                           0000E6   590 _SC1IS	=	0x00e6
                           0000E7   591 _SC1TSR	=	0x00e7
                           0000E9   592 _SC2DR	=	0x00e9
                           0000EA   593 _SC2EGT	=	0x00ea
                           0000EB   594 _SC2ETURD0	=	0x00eb
                           0000EC   595 _SC2ETURD1	=	0x00ec
                           0000ED   596 _SC2IE	=	0x00ed
                           0000EE   597 _SC2IS	=	0x00ee
                           0000EF   598 _SC2TSR	=	0x00ef
                           0000F1   599 _SC0CR0	=	0x00f1
                           0000F2   600 _SC0CR1	=	0x00f2
                           0000F3   601 _SC1CR0	=	0x00f3
                           0000F4   602 _SC1CR1	=	0x00f4
                           0000F5   603 _SC2CR0	=	0x00f5
                           0000F6   604 _SC2CR1	=	0x00f6
                           0000F7   605 _PIPS7	=	0x00f7
                           0000F9   606 _PIPS0	=	0x00f9
                           0000FA   607 _PIPS1	=	0x00fa
                           0000FB   608 _PIPS2	=	0x00fb
                           0000FC   609 _PIPS3	=	0x00fc
                           0000FD   610 _PIPS4	=	0x00fd
                           0000FE   611 _PIPS5	=	0x00fe
                           0000FF   612 _PIPS6	=	0x00ff
                                    613 ;--------------------------------------------------------
                                    614 ; special function bits
                                    615 ;--------------------------------------------------------
                                    616 	.area RSEG    (ABS,DATA)
      000000                        617 	.org 0x0000
                           0000FF   618 _SM0_1	=	0x00ff
                           0000FF   619 _FE_1	=	0x00ff
                           0000FE   620 _SM1_1	=	0x00fe
                           0000FD   621 _SM2_1	=	0x00fd
                           0000FC   622 _REN_1	=	0x00fc
                           0000FB   623 _TB8_1	=	0x00fb
                           0000FA   624 _RB8_1	=	0x00fa
                           0000F9   625 _TI_1	=	0x00f9
                           0000F8   626 _RI_1	=	0x00f8
                           0000EF   627 _ADCF	=	0x00ef
                           0000EE   628 _ADCS	=	0x00ee
                           0000ED   629 _ETGSEL1	=	0x00ed
                           0000EC   630 _ETGSEL0	=	0x00ec
                           0000EB   631 _ADCHS3	=	0x00eb
                           0000EA   632 _ADCHS2	=	0x00ea
                           0000E9   633 _ADCHS1	=	0x00e9
                           0000E8   634 _ADCHS0	=	0x00e8
                           0000DF   635 _PWMRUN	=	0x00df
                           0000DE   636 _LOAD	=	0x00de
                           0000DD   637 _PWMF	=	0x00dd
                           0000DC   638 _CLRPWM	=	0x00dc
                           0000D7   639 _CY	=	0x00d7
                           0000D6   640 _AC	=	0x00d6
                           0000D5   641 _F0	=	0x00d5
                           0000D4   642 _RS1	=	0x00d4
                           0000D3   643 _RS0	=	0x00d3
                           0000D2   644 _OV	=	0x00d2
                           0000D0   645 _P	=	0x00d0
                           0000CF   646 _TF2	=	0x00cf
                           0000CA   647 _TR2	=	0x00ca
                           0000C8   648 _CM_RL2	=	0x00c8
                           0000C6   649 _I2CEN	=	0x00c6
                           0000C5   650 _STA	=	0x00c5
                           0000C4   651 _STO	=	0x00c4
                           0000C3   652 _SI	=	0x00c3
                           0000C2   653 _AA	=	0x00c2
                           0000C0   654 _I2CPX	=	0x00c0
                           0000BE   655 _PADC	=	0x00be
                           0000BD   656 _PBOD	=	0x00bd
                           0000BC   657 _PS	=	0x00bc
                           0000BB   658 _PT1	=	0x00bb
                           0000BA   659 _PX1	=	0x00ba
                           0000B9   660 _PT0	=	0x00b9
                           0000B8   661 _PX0	=	0x00b8
                           0000B7   662 _P37	=	0x00b7
                           0000B6   663 _P36	=	0x00b6
                           0000B5   664 _P35	=	0x00b5
                           0000B4   665 _P34	=	0x00b4
                           0000B3   666 _P33	=	0x00b3
                           0000B2   667 _P32	=	0x00b2
                           0000B1   668 _P31	=	0x00b1
                           0000B0   669 _P30	=	0x00b0
                           0000AF   670 _EA	=	0x00af
                           0000AE   671 _EADC	=	0x00ae
                           0000AD   672 _EBOD	=	0x00ad
                           0000AC   673 _ES	=	0x00ac
                           0000AB   674 _ET1	=	0x00ab
                           0000AA   675 _EX1	=	0x00aa
                           0000A9   676 _ET0	=	0x00a9
                           0000A8   677 _EX0	=	0x00a8
                           0000A0   678 _P20	=	0x00a0
                           00009F   679 _SM0	=	0x009f
                           00009F   680 _FE	=	0x009f
                           00009E   681 _SM1	=	0x009e
                           00009D   682 _SM2	=	0x009d
                           00009C   683 _REN	=	0x009c
                           00009B   684 _TB8	=	0x009b
                           00009A   685 _RB8	=	0x009a
                           000099   686 _TI	=	0x0099
                           000098   687 _RI	=	0x0098
                           000097   688 _P17	=	0x0097
                           000096   689 _P16	=	0x0096
                           000096   690 _TXD_1	=	0x0096
                           000095   691 _P15	=	0x0095
                           000094   692 _P14	=	0x0094
                           000094   693 _SDA	=	0x0094
                           000093   694 _P13	=	0x0093
                           000093   695 _SCL	=	0x0093
                           000092   696 _P12	=	0x0092
                           000091   697 _P11	=	0x0091
                           000090   698 _P10	=	0x0090
                           00008F   699 _TF1	=	0x008f
                           00008E   700 _TR1	=	0x008e
                           00008D   701 _TF0	=	0x008d
                           00008C   702 _TR0	=	0x008c
                           00008B   703 _IE1	=	0x008b
                           00008A   704 _IT1	=	0x008a
                           000089   705 _IE0	=	0x0089
                           000088   706 _IT0	=	0x0088
                           000087   707 _P07	=	0x0087
                           000087   708 _RXD	=	0x0087
                           000086   709 _P06	=	0x0086
                           000086   710 _TXD	=	0x0086
                           000085   711 _P05	=	0x0085
                           000084   712 _P04	=	0x0084
                           000084   713 _STADC	=	0x0084
                           000083   714 _P03	=	0x0083
                           000082   715 _P02	=	0x0082
                           000082   716 _RXD_1	=	0x0082
                           000081   717 _P01	=	0x0081
                           000081   718 _MISO	=	0x0081
                           000080   719 _P00	=	0x0080
                           000080   720 _MOSI	=	0x0080
                                    721 ;--------------------------------------------------------
                                    722 ; overlayable register banks
                                    723 ;--------------------------------------------------------
                                    724 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        725 	.ds 8
                                    726 ;--------------------------------------------------------
                                    727 ; internal ram data
                                    728 ;--------------------------------------------------------
                                    729 	.area DSEG    (DATA)
                                    730 ;--------------------------------------------------------
                                    731 ; overlayable items in internal ram
                                    732 ;--------------------------------------------------------
                                    733 ;--------------------------------------------------------
                                    734 ; Stack segment in internal ram
                                    735 ;--------------------------------------------------------
                                    736 	.area SSEG
      000000                        737 __start__stack:
      000000                        738 	.ds	1
                                    739 
                                    740 ;--------------------------------------------------------
                                    741 ; indirectly addressable internal ram data
                                    742 ;--------------------------------------------------------
                                    743 	.area ISEG    (DATA)
                                    744 ;--------------------------------------------------------
                                    745 ; absolute internal ram data
                                    746 ;--------------------------------------------------------
                                    747 	.area IABS    (ABS,DATA)
                                    748 	.area IABS    (ABS,DATA)
                                    749 ;--------------------------------------------------------
                                    750 ; bit data
                                    751 ;--------------------------------------------------------
                                    752 	.area BSEG    (BIT)
                                    753 ;--------------------------------------------------------
                                    754 ; paged external ram data
                                    755 ;--------------------------------------------------------
                                    756 	.area PSEG    (PAG,XDATA)
                                    757 ;--------------------------------------------------------
                                    758 ; uninitialized external ram data
                                    759 ;--------------------------------------------------------
                                    760 	.area XSEG    (XDATA)
                                    761 ;--------------------------------------------------------
                                    762 ; absolute external ram data
                                    763 ;--------------------------------------------------------
                                    764 	.area XABS    (ABS,XDATA)
                                    765 ;--------------------------------------------------------
                                    766 ; initialized external ram data
                                    767 ;--------------------------------------------------------
                                    768 	.area XISEG   (XDATA)
                                    769 	.area HOME    (CODE)
                                    770 	.area GSINIT0 (CODE)
                                    771 	.area GSINIT1 (CODE)
                                    772 	.area GSINIT2 (CODE)
                                    773 	.area GSINIT3 (CODE)
                                    774 	.area GSINIT4 (CODE)
                                    775 	.area GSINIT5 (CODE)
                                    776 	.area GSINIT  (CODE)
                                    777 	.area GSFINAL (CODE)
                                    778 	.area CSEG    (CODE)
                                    779 ;--------------------------------------------------------
                                    780 ; interrupt vector
                                    781 ;--------------------------------------------------------
                                    782 	.area HOME    (CODE)
      000000                        783 __interrupt_vect:
      000000 02r00r00         [24]  784 	ljmp	__sdcc_gsinit_startup
      000003 02r00r00         [24]  785 	ljmp	_INT0_ISR
      000006                        786 	.ds	5
      00000B 02r00r08         [24]  787 	ljmp	_Timer0_ISR
      00000E                        788 	.ds	5
      000013 02r00r10         [24]  789 	ljmp	_INT1_ISR
      000016                        790 	.ds	5
      00001B 02r00r18         [24]  791 	ljmp	_Timer1_ISR
      00001E                        792 	.ds	5
      000023 02r00r22         [24]  793 	ljmp	_UART0_ISR
      000026                        794 	.ds	5
      00002B 02r00r2D         [24]  795 	ljmp	_Timer2_ISR
      00002E                        796 	.ds	5
      000033 02r00r35         [24]  797 	ljmp	_I2C_ISR
      000036                        798 	.ds	5
      00003B 02r00r3D         [24]  799 	ljmp	_Pin_INT_ISR
      00003E                        800 	.ds	5
      000043 02r00r45         [24]  801 	ljmp	_BOD_ISR
      000046                        802 	.ds	5
      00004B 02r00r64         [24]  803 	ljmp	_SPI_ISR
      00004E                        804 	.ds	5
      000053 02r00r6F         [24]  805 	ljmp	_WDT_ISR
      000056                        806 	.ds	5
      00005B 02r00r8E         [24]  807 	ljmp	_ADC_ISR
      00005E                        808 	.ds	5
      000063 02r00r96         [24]  809 	ljmp	_Capture_ISR
      000066                        810 	.ds	5
      00006B 32               [24]  811 	reti
      00006C                        812 	.ds	7
      000073 02r00rAD         [24]  813 	ljmp	_PWM_Brake_ISR
      000076                        814 	.ds	5
      00007B 02r00rB8         [24]  815 	ljmp	_UART1_ISR
      00007E                        816 	.ds	5
      000083 02r00rC3         [24]  817 	ljmp	_Timer3_ISR
      000086                        818 	.ds	5
      00008B 02r00rCE         [24]  819 	ljmp	_WKT_ISR
                                    820 ;--------------------------------------------------------
                                    821 ; global & static initialisations
                                    822 ;--------------------------------------------------------
                                    823 	.area HOME    (CODE)
                                    824 	.area GSINIT  (CODE)
                                    825 	.area GSFINAL (CODE)
                                    826 	.area GSINIT  (CODE)
                                    827 	.globl __sdcc_gsinit_startup
                                    828 	.globl __sdcc_program_startup
                                    829 	.globl __start__stack
                                    830 	.globl __mcs51_genXINIT
                                    831 	.globl __mcs51_genXRAMCLEAR
                                    832 	.globl __mcs51_genRAMCLEAR
                                    833 	.area GSFINAL (CODE)
      000000 02r00r8E         [24]  834 	ljmp	__sdcc_program_startup
                                    835 ;--------------------------------------------------------
                                    836 ; Home
                                    837 ;--------------------------------------------------------
                                    838 	.area HOME    (CODE)
                                    839 	.area HOME    (CODE)
      00008E                        840 __sdcc_program_startup:
      00008E 02r00rD9         [24]  841 	ljmp	_main
                                    842 ;	return from main will return to caller
                                    843 ;--------------------------------------------------------
                                    844 ; code
                                    845 ;--------------------------------------------------------
                                    846 	.area CSEG    (CODE)
                                    847 ;------------------------------------------------------------
                                    848 ;Allocation info for local variables in function 'INT0_ISR'
                                    849 ;------------------------------------------------------------
                                    850 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:21: void INT0_ISR(void) __interrupt(0)          // Vector @  0x03
                                    851 ;	-----------------------------------------
                                    852 ;	 function INT0_ISR
                                    853 ;	-----------------------------------------
      000000                        854 _INT0_ISR:
                           000007   855 	ar7 = 0x07
                           000006   856 	ar6 = 0x06
                           000005   857 	ar5 = 0x05
                           000004   858 	ar4 = 0x04
                           000003   859 	ar3 = 0x03
                           000002   860 	ar2 = 0x02
                           000001   861 	ar1 = 0x01
                           000000   862 	ar0 = 0x00
                                    863 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:23: _push_(SFRS);
      000000 C0 91            [24]  864 	push	_SFRS 
                                    865 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:24: clr_TCON_IE0;
      000002 53 88 FD         [24]  866 	anl	_TCON,#0xfd
                                    867 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:25: _pop_(SFRS);
      000005 D0 91            [24]  868 	pop	_SFRS 
                                    869 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:26: }
      000007 32               [24]  870 	reti
                                    871 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    872 ;	eliminated unneeded push/pop not_psw
                                    873 ;	eliminated unneeded push/pop dpl
                                    874 ;	eliminated unneeded push/pop dph
                                    875 ;	eliminated unneeded push/pop b
                                    876 ;	eliminated unneeded push/pop acc
                                    877 ;------------------------------------------------------------
                                    878 ;Allocation info for local variables in function 'Timer0_ISR'
                                    879 ;------------------------------------------------------------
                                    880 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:28: void Timer0_ISR(void) __interrupt(1)        // Vector @  0x0B
                                    881 ;	-----------------------------------------
                                    882 ;	 function Timer0_ISR
                                    883 ;	-----------------------------------------
      000008                        884 _Timer0_ISR:
                                    885 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:30: _push_(SFRS);
      000008 C0 91            [24]  886 	push	_SFRS 
                                    887 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:31: clr_TCON_TF0;
      00000A 53 88 DF         [24]  888 	anl	_TCON,#0xdf
                                    889 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:32: _pop_(SFRS);
      00000D D0 91            [24]  890 	pop	_SFRS 
                                    891 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:33: }
      00000F 32               [24]  892 	reti
                                    893 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    894 ;	eliminated unneeded push/pop not_psw
                                    895 ;	eliminated unneeded push/pop dpl
                                    896 ;	eliminated unneeded push/pop dph
                                    897 ;	eliminated unneeded push/pop b
                                    898 ;	eliminated unneeded push/pop acc
                                    899 ;------------------------------------------------------------
                                    900 ;Allocation info for local variables in function 'INT1_ISR'
                                    901 ;------------------------------------------------------------
                                    902 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:35: void INT1_ISR(void) __interrupt (2)          // Vector @  0x13
                                    903 ;	-----------------------------------------
                                    904 ;	 function INT1_ISR
                                    905 ;	-----------------------------------------
      000010                        906 _INT1_ISR:
                                    907 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:37: _push_(SFRS);
      000010 C0 91            [24]  908 	push	_SFRS 
                                    909 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:38: clr_TCON_IE1;
      000012 53 88 F7         [24]  910 	anl	_TCON,#0xf7
                                    911 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:39: _pop_(SFRS);
      000015 D0 91            [24]  912 	pop	_SFRS 
                                    913 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:40: }
      000017 32               [24]  914 	reti
                                    915 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    916 ;	eliminated unneeded push/pop not_psw
                                    917 ;	eliminated unneeded push/pop dpl
                                    918 ;	eliminated unneeded push/pop dph
                                    919 ;	eliminated unneeded push/pop b
                                    920 ;	eliminated unneeded push/pop acc
                                    921 ;------------------------------------------------------------
                                    922 ;Allocation info for local variables in function 'Timer1_ISR'
                                    923 ;------------------------------------------------------------
                                    924 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:42: void Timer1_ISR(void) __interrupt(3)        // Vector @  0x1B
                                    925 ;	-----------------------------------------
                                    926 ;	 function Timer1_ISR
                                    927 ;	-----------------------------------------
      000018                        928 _Timer1_ISR:
                                    929 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:44: _push_(SFRS);
      000018 C0 91            [24]  930 	push	_SFRS 
                                    931 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:45: clr_TCON_TF1;
      00001A 53 88 7F         [24]  932 	anl	_TCON,#0x7f
                                    933 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:46: _pop_(SFRS);
      00001D D0 91            [24]  934 	pop	_SFRS 
                                    935 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:47: _pop_(SFRS);
      00001F D0 91            [24]  936 	pop	_SFRS 
                                    937 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:48: }
      000021 32               [24]  938 	reti
                                    939 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    940 ;	eliminated unneeded push/pop not_psw
                                    941 ;	eliminated unneeded push/pop dpl
                                    942 ;	eliminated unneeded push/pop dph
                                    943 ;	eliminated unneeded push/pop b
                                    944 ;	eliminated unneeded push/pop acc
                                    945 ;------------------------------------------------------------
                                    946 ;Allocation info for local variables in function 'UART0_ISR'
                                    947 ;------------------------------------------------------------
                                    948 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:50: void UART0_ISR(void) __interrupt(4)         // Vector @  0x23
                                    949 ;	-----------------------------------------
                                    950 ;	 function UART0_ISR
                                    951 ;	-----------------------------------------
      000022                        952 _UART0_ISR:
                                    953 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:52: _push_(SFRS);
      000022 C0 91            [24]  954 	push	_SFRS 
                                    955 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:53: clr_SCON_RI;
      000024 53 98 FE         [24]  956 	anl	_SCON,#0xfe
                                    957 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:54: clr_SCON_TI;
      000027 53 98 FD         [24]  958 	anl	_SCON,#0xfd
                                    959 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:55: _pop_(SFRS);
      00002A D0 91            [24]  960 	pop	_SFRS 
                                    961 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:56: }
      00002C 32               [24]  962 	reti
                                    963 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    964 ;	eliminated unneeded push/pop not_psw
                                    965 ;	eliminated unneeded push/pop dpl
                                    966 ;	eliminated unneeded push/pop dph
                                    967 ;	eliminated unneeded push/pop b
                                    968 ;	eliminated unneeded push/pop acc
                                    969 ;------------------------------------------------------------
                                    970 ;Allocation info for local variables in function 'Timer2_ISR'
                                    971 ;------------------------------------------------------------
                                    972 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:58: void Timer2_ISR(void) __interrupt(5)       // Vector @  0x2B
                                    973 ;	-----------------------------------------
                                    974 ;	 function Timer2_ISR
                                    975 ;	-----------------------------------------
      00002D                        976 _Timer2_ISR:
                                    977 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:60: _push_(SFRS);
      00002D C0 91            [24]  978 	push	_SFRS 
                                    979 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:61: clr_T2CON_TF2;
      00002F 53 C8 7F         [24]  980 	anl	_T2CON,#0x7f
                                    981 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:62: _pop_(SFRS);
      000032 D0 91            [24]  982 	pop	_SFRS 
                                    983 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:63: }
      000034 32               [24]  984 	reti
                                    985 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    986 ;	eliminated unneeded push/pop not_psw
                                    987 ;	eliminated unneeded push/pop dpl
                                    988 ;	eliminated unneeded push/pop dph
                                    989 ;	eliminated unneeded push/pop b
                                    990 ;	eliminated unneeded push/pop acc
                                    991 ;------------------------------------------------------------
                                    992 ;Allocation info for local variables in function 'I2C_ISR'
                                    993 ;------------------------------------------------------------
                                    994 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:65: void I2C_ISR(void) __interrupt(6)           // Vector @  0x33
                                    995 ;	-----------------------------------------
                                    996 ;	 function I2C_ISR
                                    997 ;	-----------------------------------------
      000035                        998 _I2C_ISR:
                                    999 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:67: _push_(SFRS);
      000035 C0 91            [24] 1000 	push	_SFRS 
                                   1001 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:68: clr_I2CON_SI;
      000037 53 C0 F7         [24] 1002 	anl	_I2CON,#0xf7
                                   1003 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:70: _pop_(SFRS);
      00003A D0 91            [24] 1004 	pop	_SFRS 
                                   1005 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:71: }//-----------------------------------------------------------------------------------------------------------
      00003C 32               [24] 1006 	reti
                                   1007 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1008 ;	eliminated unneeded push/pop not_psw
                                   1009 ;	eliminated unneeded push/pop dpl
                                   1010 ;	eliminated unneeded push/pop dph
                                   1011 ;	eliminated unneeded push/pop b
                                   1012 ;	eliminated unneeded push/pop acc
                                   1013 ;------------------------------------------------------------
                                   1014 ;Allocation info for local variables in function 'Pin_INT_ISR'
                                   1015 ;------------------------------------------------------------
                                   1016 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:72: void Pin_INT_ISR(void) __interrupt(7)       // Vector @  0x3B
                                   1017 ;	-----------------------------------------
                                   1018 ;	 function Pin_INT_ISR
                                   1019 ;	-----------------------------------------
      00003D                       1020 _Pin_INT_ISR:
                                   1021 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:74: _push_(SFRS);
      00003D C0 91            [24] 1022 	push	_SFRS 
                                   1023 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:75: PIF = 0;
      00003F 75 EC 00         [24] 1024 	mov	_PIF,#0x00
                                   1025 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:76: _pop_(SFRS);
      000042 D0 91            [24] 1026 	pop	_SFRS 
                                   1027 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:77: }//-----------------------------------------------------------------------------------------------------------
      000044 32               [24] 1028 	reti
                                   1029 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1030 ;	eliminated unneeded push/pop not_psw
                                   1031 ;	eliminated unneeded push/pop dpl
                                   1032 ;	eliminated unneeded push/pop dph
                                   1033 ;	eliminated unneeded push/pop b
                                   1034 ;	eliminated unneeded push/pop acc
                                   1035 ;------------------------------------------------------------
                                   1036 ;Allocation info for local variables in function 'BOD_ISR'
                                   1037 ;------------------------------------------------------------
                                   1038 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:78: void BOD_ISR(void) __interrupt(8)          // Vector @  0x43
                                   1039 ;	-----------------------------------------
                                   1040 ;	 function BOD_ISR
                                   1041 ;	-----------------------------------------
      000045                       1042 _BOD_ISR:
      000045 C0 D0            [24] 1043 	push	psw
                                   1044 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:80: _push_(SFRS);
      000047 C0 91            [24] 1045 	push	_SFRS 
                                   1046 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:81: clr_BODCON0_BOF;
      000049 75 91 00         [24] 1047 	mov	_SFRS,#0x00
                                   1048 ;	assignBit
      00004C A2 AF            [12] 1049 	mov	c,_EA
      00004E 92*00            [24] 1050 	mov	_BIT_TMP,c
                                   1051 ;	assignBit
      000050 C2 AF            [12] 1052 	clr	_EA
      000052 75 C7 AA         [24] 1053 	mov	_TA,#0xaa
      000055 75 C7 55         [24] 1054 	mov	_TA,#0x55
      000058 53 A3 F7         [24] 1055 	anl	_BODCON0,#0xf7
                                   1056 ;	assignBit
      00005B A2*00            [12] 1057 	mov	c,_BIT_TMP
      00005D 92 AF            [24] 1058 	mov	_EA,c
                                   1059 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:82: _pop_(SFRS);
      00005F D0 91            [24] 1060 	pop	_SFRS 
                                   1061 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:83: }
      000061 D0 D0            [24] 1062 	pop	psw
      000063 32               [24] 1063 	reti
                                   1064 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1065 ;	eliminated unneeded push/pop dpl
                                   1066 ;	eliminated unneeded push/pop dph
                                   1067 ;	eliminated unneeded push/pop b
                                   1068 ;	eliminated unneeded push/pop acc
                                   1069 ;------------------------------------------------------------
                                   1070 ;Allocation info for local variables in function 'SPI_ISR'
                                   1071 ;------------------------------------------------------------
                                   1072 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:85: void SPI_ISR(void) __interrupt(9)          // Vector @  0x4B
                                   1073 ;	-----------------------------------------
                                   1074 ;	 function SPI_ISR
                                   1075 ;	-----------------------------------------
      000064                       1076 _SPI_ISR:
                                   1077 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:87: _push_(SFRS);
      000064 C0 91            [24] 1078 	push	_SFRS 
                                   1079 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:88: clr_SPSR_SPIF;
      000066 75 91 00         [24] 1080 	mov	_SFRS,#0x00
      000069 53 F4 7F         [24] 1081 	anl	_SPSR,#0x7f
                                   1082 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:89: _pop_(SFRS);
      00006C D0 91            [24] 1083 	pop	_SFRS 
                                   1084 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:90: }
      00006E 32               [24] 1085 	reti
                                   1086 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1087 ;	eliminated unneeded push/pop not_psw
                                   1088 ;	eliminated unneeded push/pop dpl
                                   1089 ;	eliminated unneeded push/pop dph
                                   1090 ;	eliminated unneeded push/pop b
                                   1091 ;	eliminated unneeded push/pop acc
                                   1092 ;------------------------------------------------------------
                                   1093 ;Allocation info for local variables in function 'WDT_ISR'
                                   1094 ;------------------------------------------------------------
                                   1095 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:92: void WDT_ISR(void) __interrupt(10)          // Vector @  0x53
                                   1096 ;	-----------------------------------------
                                   1097 ;	 function WDT_ISR
                                   1098 ;	-----------------------------------------
      00006F                       1099 _WDT_ISR:
      00006F C0 D0            [24] 1100 	push	psw
                                   1101 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:94: _push_(SFRS);
      000071 C0 91            [24] 1102 	push	_SFRS 
                                   1103 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:95: clr_WDCON_WDTF;
      000073 75 91 00         [24] 1104 	mov	_SFRS,#0x00
                                   1105 ;	assignBit
      000076 A2 AF            [12] 1106 	mov	c,_EA
      000078 92*00            [24] 1107 	mov	_BIT_TMP,c
                                   1108 ;	assignBit
      00007A C2 AF            [12] 1109 	clr	_EA
      00007C 75 C7 AA         [24] 1110 	mov	_TA,#0xaa
      00007F 75 C7 55         [24] 1111 	mov	_TA,#0x55
      000082 53 AA DF         [24] 1112 	anl	_WDCON,#0xdf
                                   1113 ;	assignBit
      000085 A2*00            [12] 1114 	mov	c,_BIT_TMP
      000087 92 AF            [24] 1115 	mov	_EA,c
                                   1116 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:96: _pop_(SFRS);
      000089 D0 91            [24] 1117 	pop	_SFRS 
                                   1118 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:97: }
      00008B D0 D0            [24] 1119 	pop	psw
      00008D 32               [24] 1120 	reti
                                   1121 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1122 ;	eliminated unneeded push/pop dpl
                                   1123 ;	eliminated unneeded push/pop dph
                                   1124 ;	eliminated unneeded push/pop b
                                   1125 ;	eliminated unneeded push/pop acc
                                   1126 ;------------------------------------------------------------
                                   1127 ;Allocation info for local variables in function 'ADC_ISR'
                                   1128 ;------------------------------------------------------------
                                   1129 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:99: void ADC_ISR(void) __interrupt(11)          // Vector @  0x5B
                                   1130 ;	-----------------------------------------
                                   1131 ;	 function ADC_ISR
                                   1132 ;	-----------------------------------------
      00008E                       1133 _ADC_ISR:
                                   1134 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:101: _push_(SFRS);
      00008E C0 91            [24] 1135 	push	_SFRS 
                                   1136 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:102: clr_ADCCON0_ADCF;
      000090 53 E8 7F         [24] 1137 	anl	_ADCCON0,#0x7f
                                   1138 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:103: _pop_(SFRS);
      000093 D0 91            [24] 1139 	pop	_SFRS 
                                   1140 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:104: }
      000095 32               [24] 1141 	reti
                                   1142 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1143 ;	eliminated unneeded push/pop not_psw
                                   1144 ;	eliminated unneeded push/pop dpl
                                   1145 ;	eliminated unneeded push/pop dph
                                   1146 ;	eliminated unneeded push/pop b
                                   1147 ;	eliminated unneeded push/pop acc
                                   1148 ;------------------------------------------------------------
                                   1149 ;Allocation info for local variables in function 'Capture_ISR'
                                   1150 ;------------------------------------------------------------
                                   1151 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:106: void Capture_ISR(void) __interrupt(12)    // Vector @  0x63
                                   1152 ;	-----------------------------------------
                                   1153 ;	 function Capture_ISR
                                   1154 ;	-----------------------------------------
      000096                       1155 _Capture_ISR:
                                   1156 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:108: _push_(SFRS);
      000096 C0 91            [24] 1157 	push	_SFRS 
                                   1158 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:109: clr_CAPCON0_CAPF0;
      000098 75 91 00         [24] 1159 	mov	_SFRS,#0x00
      00009B 53 92 FE         [24] 1160 	anl	_CAPCON0,#0xfe
                                   1161 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:110: clr_CAPCON0_CAPF1;
      00009E 75 91 00         [24] 1162 	mov	_SFRS,#0x00
      0000A1 53 92 FD         [24] 1163 	anl	_CAPCON0,#0xfd
                                   1164 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:111: clr_CAPCON0_CAPF2;
      0000A4 75 91 00         [24] 1165 	mov	_SFRS,#0x00
      0000A7 53 92 FB         [24] 1166 	anl	_CAPCON0,#0xfb
                                   1167 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:112: _pop_(SFRS);
      0000AA D0 91            [24] 1168 	pop	_SFRS 
                                   1169 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:113: }
      0000AC 32               [24] 1170 	reti
                                   1171 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1172 ;	eliminated unneeded push/pop not_psw
                                   1173 ;	eliminated unneeded push/pop dpl
                                   1174 ;	eliminated unneeded push/pop dph
                                   1175 ;	eliminated unneeded push/pop b
                                   1176 ;	eliminated unneeded push/pop acc
                                   1177 ;------------------------------------------------------------
                                   1178 ;Allocation info for local variables in function 'PWM_Brake_ISR'
                                   1179 ;------------------------------------------------------------
                                   1180 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:115: void PWM_Brake_ISR(void) __interrupt(14)    // Vector @  0x73
                                   1181 ;	-----------------------------------------
                                   1182 ;	 function PWM_Brake_ISR
                                   1183 ;	-----------------------------------------
      0000AD                       1184 _PWM_Brake_ISR:
                                   1185 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:117: _push_(SFRS);
      0000AD C0 91            [24] 1186 	push	_SFRS 
                                   1187 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:118: clr_PWM0FBD_FBF;
      0000AF 75 91 00         [24] 1188 	mov	_SFRS,#0x00
      0000B2 53 D7 7F         [24] 1189 	anl	_PWM0FBD,#0x7f
                                   1190 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:119: _pop_(SFRS);
      0000B5 D0 91            [24] 1191 	pop	_SFRS 
                                   1192 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:120: }
      0000B7 32               [24] 1193 	reti
                                   1194 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1195 ;	eliminated unneeded push/pop not_psw
                                   1196 ;	eliminated unneeded push/pop dpl
                                   1197 ;	eliminated unneeded push/pop dph
                                   1198 ;	eliminated unneeded push/pop b
                                   1199 ;	eliminated unneeded push/pop acc
                                   1200 ;------------------------------------------------------------
                                   1201 ;Allocation info for local variables in function 'UART1_ISR'
                                   1202 ;------------------------------------------------------------
                                   1203 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:122: void UART1_ISR(void) __interrupt(15)               // Vector @  0x7B
                                   1204 ;	-----------------------------------------
                                   1205 ;	 function UART1_ISR
                                   1206 ;	-----------------------------------------
      0000B8                       1207 _UART1_ISR:
                                   1208 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:124: _push_(SFRS);
      0000B8 C0 91            [24] 1209 	push	_SFRS 
                                   1210 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:125: clr_SCON_1_RI_1;
      0000BA 53 F8 FE         [24] 1211 	anl	_SCON_1,#0xfe
                                   1212 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:126: clr_SCON_1_TI_1;
      0000BD 53 F8 FD         [24] 1213 	anl	_SCON_1,#0xfd
                                   1214 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:127: _pop_(SFRS);
      0000C0 D0 91            [24] 1215 	pop	_SFRS 
                                   1216 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:128: }
      0000C2 32               [24] 1217 	reti
                                   1218 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1219 ;	eliminated unneeded push/pop not_psw
                                   1220 ;	eliminated unneeded push/pop dpl
                                   1221 ;	eliminated unneeded push/pop dph
                                   1222 ;	eliminated unneeded push/pop b
                                   1223 ;	eliminated unneeded push/pop acc
                                   1224 ;------------------------------------------------------------
                                   1225 ;Allocation info for local variables in function 'Timer3_ISR'
                                   1226 ;------------------------------------------------------------
                                   1227 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:130: void Timer3_ISR(void) __interrupt(16)         // Vector @  0x83
                                   1228 ;	-----------------------------------------
                                   1229 ;	 function Timer3_ISR
                                   1230 ;	-----------------------------------------
      0000C3                       1231 _Timer3_ISR:
                                   1232 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:132: _push_(SFRS);
      0000C3 C0 91            [24] 1233 	push	_SFRS 
                                   1234 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:133: clr_T3CON_TF3;
      0000C5 75 91 00         [24] 1235 	mov	_SFRS,#0x00
      0000C8 53 C4 EF         [24] 1236 	anl	_T3CON,#0xef
                                   1237 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:134: _pop_(SFRS);
      0000CB D0 91            [24] 1238 	pop	_SFRS 
                                   1239 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:135: }
      0000CD 32               [24] 1240 	reti
                                   1241 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1242 ;	eliminated unneeded push/pop not_psw
                                   1243 ;	eliminated unneeded push/pop dpl
                                   1244 ;	eliminated unneeded push/pop dph
                                   1245 ;	eliminated unneeded push/pop b
                                   1246 ;	eliminated unneeded push/pop acc
                                   1247 ;------------------------------------------------------------
                                   1248 ;Allocation info for local variables in function 'WKT_ISR'
                                   1249 ;------------------------------------------------------------
                                   1250 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:137: void WKT_ISR(void) __interrupt(17)                // Vector @  0x8B
                                   1251 ;	-----------------------------------------
                                   1252 ;	 function WKT_ISR
                                   1253 ;	-----------------------------------------
      0000CE                       1254 _WKT_ISR:
                                   1255 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:139: _push_(SFRS);
      0000CE C0 91            [24] 1256 	push	_SFRS 
                                   1257 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:140: clr_WKCON_WKTF;
      0000D0 75 91 00         [24] 1258 	mov	_SFRS,#0x00
      0000D3 53 8F EF         [24] 1259 	anl	_WKCON,#0xef
                                   1260 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:141: _pop_(SFRS);
      0000D6 D0 91            [24] 1261 	pop	_SFRS 
                                   1262 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:142: }
      0000D8 32               [24] 1263 	reti
                                   1264 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                   1265 ;	eliminated unneeded push/pop not_psw
                                   1266 ;	eliminated unneeded push/pop dpl
                                   1267 ;	eliminated unneeded push/pop dph
                                   1268 ;	eliminated unneeded push/pop b
                                   1269 ;	eliminated unneeded push/pop acc
                                   1270 ;------------------------------------------------------------
                                   1271 ;Allocation info for local variables in function 'main'
                                   1272 ;------------------------------------------------------------
                                   1273 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:145: void main(void)
                                   1274 ;	-----------------------------------------
                                   1275 ;	 function main
                                   1276 ;	-----------------------------------------
      0000D9                       1277 _main:
                                   1278 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:147: while (1);
      0000D9                       1279 00102$:
                                   1280 ;	..\..\..\..\..\Library\StdDriver\src\isr.c:148: }
      0000D9 80 FE            [24] 1281 	sjmp	00102$
                                   1282 	.area CSEG    (CODE)
                                   1283 	.area CONST   (CODE)
                                   1284 	.area XINIT   (CODE)
                                   1285 	.area CABS    (ABS,CODE)
