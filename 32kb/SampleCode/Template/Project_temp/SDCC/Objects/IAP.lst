                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.14 #13855 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module IAP
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _IAP_ERROR
                                     12 	.globl _MOSI
                                     13 	.globl _P00
                                     14 	.globl _MISO
                                     15 	.globl _P01
                                     16 	.globl _RXD_1
                                     17 	.globl _P02
                                     18 	.globl _P03
                                     19 	.globl _STADC
                                     20 	.globl _P04
                                     21 	.globl _P05
                                     22 	.globl _TXD
                                     23 	.globl _P06
                                     24 	.globl _RXD
                                     25 	.globl _P07
                                     26 	.globl _IT0
                                     27 	.globl _IE0
                                     28 	.globl _IT1
                                     29 	.globl _IE1
                                     30 	.globl _TR0
                                     31 	.globl _TF0
                                     32 	.globl _TR1
                                     33 	.globl _TF1
                                     34 	.globl _P10
                                     35 	.globl _P11
                                     36 	.globl _P12
                                     37 	.globl _SCL
                                     38 	.globl _P13
                                     39 	.globl _SDA
                                     40 	.globl _P14
                                     41 	.globl _P15
                                     42 	.globl _TXD_1
                                     43 	.globl _P16
                                     44 	.globl _P17
                                     45 	.globl _RI
                                     46 	.globl _TI
                                     47 	.globl _RB8
                                     48 	.globl _TB8
                                     49 	.globl _REN
                                     50 	.globl _SM2
                                     51 	.globl _SM1
                                     52 	.globl _FE
                                     53 	.globl _SM0
                                     54 	.globl _P20
                                     55 	.globl _EX0
                                     56 	.globl _ET0
                                     57 	.globl _EX1
                                     58 	.globl _ET1
                                     59 	.globl _ES
                                     60 	.globl _EBOD
                                     61 	.globl _EADC
                                     62 	.globl _EA
                                     63 	.globl _P30
                                     64 	.globl _P31
                                     65 	.globl _P32
                                     66 	.globl _P33
                                     67 	.globl _P34
                                     68 	.globl _P35
                                     69 	.globl _P36
                                     70 	.globl _P37
                                     71 	.globl _PX0
                                     72 	.globl _PT0
                                     73 	.globl _PX1
                                     74 	.globl _PT1
                                     75 	.globl _PS
                                     76 	.globl _PBOD
                                     77 	.globl _PADC
                                     78 	.globl _I2CPX
                                     79 	.globl _AA
                                     80 	.globl _SI
                                     81 	.globl _STO
                                     82 	.globl _STA
                                     83 	.globl _I2CEN
                                     84 	.globl _CM_RL2
                                     85 	.globl _TR2
                                     86 	.globl _TF2
                                     87 	.globl _P
                                     88 	.globl _OV
                                     89 	.globl _RS0
                                     90 	.globl _RS1
                                     91 	.globl _F0
                                     92 	.globl _AC
                                     93 	.globl _CY
                                     94 	.globl _CLRPWM
                                     95 	.globl _PWMF
                                     96 	.globl _LOAD
                                     97 	.globl _PWMRUN
                                     98 	.globl _ADCHS0
                                     99 	.globl _ADCHS1
                                    100 	.globl _ADCHS2
                                    101 	.globl _ADCHS3
                                    102 	.globl _ETGSEL0
                                    103 	.globl _ETGSEL1
                                    104 	.globl _ADCS
                                    105 	.globl _ADCF
                                    106 	.globl _RI_1
                                    107 	.globl _TI_1
                                    108 	.globl _RB8_1
                                    109 	.globl _TB8_1
                                    110 	.globl _REN_1
                                    111 	.globl _SM2_1
                                    112 	.globl _SM1_1
                                    113 	.globl _FE_1
                                    114 	.globl _SM0_1
                                    115 	.globl _PIPS6
                                    116 	.globl _PIPS5
                                    117 	.globl _PIPS4
                                    118 	.globl _PIPS3
                                    119 	.globl _PIPS2
                                    120 	.globl _PIPS1
                                    121 	.globl _PIPS0
                                    122 	.globl _PIPS7
                                    123 	.globl _SC2CR1
                                    124 	.globl _SC2CR0
                                    125 	.globl _SC1CR1
                                    126 	.globl _SC1CR0
                                    127 	.globl _SC0CR1
                                    128 	.globl _SC0CR0
                                    129 	.globl _SC2TSR
                                    130 	.globl _SC2IS
                                    131 	.globl _SC2IE
                                    132 	.globl _SC2ETURD1
                                    133 	.globl _SC2ETURD0
                                    134 	.globl _SC2EGT
                                    135 	.globl _SC2DR
                                    136 	.globl _SC1TSR
                                    137 	.globl _SC1IS
                                    138 	.globl _SC1IE
                                    139 	.globl _SC1ETURD1
                                    140 	.globl _SC1ETURD0
                                    141 	.globl _SC1EGT
                                    142 	.globl _SC1DR
                                    143 	.globl _SC0TSR
                                    144 	.globl _SC0IS
                                    145 	.globl _SC0IE
                                    146 	.globl _SC0ETURD1
                                    147 	.globl _SC0ETURD0
                                    148 	.globl _SC0EGT
                                    149 	.globl _SC0DR
                                    150 	.globl _XTLCON
                                    151 	.globl _PWM3INTC
                                    152 	.globl _PWM3CON1
                                    153 	.globl _PWM3CON0
                                    154 	.globl _PWM3C1L
                                    155 	.globl _PWM3C0L
                                    156 	.globl _PWM3PL
                                    157 	.globl _EIPH2
                                    158 	.globl _EIP2
                                    159 	.globl _PWM3MEN
                                    160 	.globl _PWM3MD
                                    161 	.globl _PWM3C1H
                                    162 	.globl _PWM3C0H
                                    163 	.globl _PWM3PH
                                    164 	.globl _PWM2INTC
                                    165 	.globl _PWM2CON1
                                    166 	.globl _PWM2CON0
                                    167 	.globl _PWM2C1L
                                    168 	.globl _PWM2C0L
                                    169 	.globl _PWM2PL
                                    170 	.globl _PWM2MEN
                                    171 	.globl _PWM2MD
                                    172 	.globl _PWM2C1H
                                    173 	.globl _PWM2C0H
                                    174 	.globl _PWM2PH
                                    175 	.globl _PIOCON2
                                    176 	.globl _PWM1INTC
                                    177 	.globl _PWM1CON1
                                    178 	.globl _PWM1CON0
                                    179 	.globl _PWM1C1L
                                    180 	.globl _PWM1C0L
                                    181 	.globl _PWM1PL
                                    182 	.globl _PWM1MEN
                                    183 	.globl _PWM1MD
                                    184 	.globl _PWM1C1H
                                    185 	.globl _PWM1C0H
                                    186 	.globl _PWM1PH
                                    187 	.globl _AUXR8
                                    188 	.globl _AUXR7
                                    189 	.globl _AUXR6
                                    190 	.globl _AUXR5
                                    191 	.globl _AUXR4
                                    192 	.globl _AUXR3
                                    193 	.globl _AUXR2
                                    194 	.globl _P3DW
                                    195 	.globl _P2DW
                                    196 	.globl _P1DW
                                    197 	.globl _P0DW
                                    198 	.globl _AINDIDS1
                                    199 	.globl _RWKH
                                    200 	.globl _P3UP
                                    201 	.globl _P2UP
                                    202 	.globl _P1UP
                                    203 	.globl _P0UP
                                    204 	.globl _ADCSR
                                    205 	.globl _ADCCN
                                    206 	.globl _ADCSN
                                    207 	.globl _P2S
                                    208 	.globl _P2SR
                                    209 	.globl _P2M2
                                    210 	.globl _P2M1
                                    211 	.globl _ADCCON3
                                    212 	.globl _ADCBAH
                                    213 	.globl _ADCBAL
                                    214 	.globl _LVRDIS
                                    215 	.globl _SPCR2
                                    216 	.globl _PWM0C5L
                                    217 	.globl _PWM0C4L
                                    218 	.globl _PIOCON1
                                    219 	.globl _PWM0C5H
                                    220 	.globl _PWM0C4H
                                    221 	.globl _PWM0INTC
                                    222 	.globl _P1SR
                                    223 	.globl _P1S
                                    224 	.globl _P0SR
                                    225 	.globl _P0S
                                    226 	.globl _P3SR
                                    227 	.globl _P3S
                                    228 	.globl _EIPH1
                                    229 	.globl _EIP1
                                    230 	.globl _PORDIS
                                    231 	.globl _PWM0MD
                                    232 	.globl _PWM0MEN
                                    233 	.globl _PWM0DTCNT
                                    234 	.globl _PWM0DTEN
                                    235 	.globl _SCON_1
                                    236 	.globl _EIPH
                                    237 	.globl _AINDIDS0
                                    238 	.globl _SPDR
                                    239 	.globl _SPSR
                                    240 	.globl _SPCR
                                    241 	.globl _CAPCON4
                                    242 	.globl _CAPCON3
                                    243 	.globl _B
                                    244 	.globl _EIP
                                    245 	.globl _C2H
                                    246 	.globl _C2L
                                    247 	.globl _PIF
                                    248 	.globl _PIPEN
                                    249 	.globl _PINEN
                                    250 	.globl _PICON
                                    251 	.globl _ADCCON0
                                    252 	.globl _C1H
                                    253 	.globl _C1L
                                    254 	.globl _C0H
                                    255 	.globl _C0L
                                    256 	.globl _ADCDLY
                                    257 	.globl _ADCCON2
                                    258 	.globl _ADCCON1
                                    259 	.globl _ACC
                                    260 	.globl _PWM0CON1
                                    261 	.globl _PIOCON0
                                    262 	.globl _PWM0C3L
                                    263 	.globl _PWM0C2L
                                    264 	.globl _PWM0C1L
                                    265 	.globl _PWM0C0L
                                    266 	.globl _PWM0PL
                                    267 	.globl _PWM0CON0
                                    268 	.globl _PWM0FBD
                                    269 	.globl _PNP
                                    270 	.globl _PWM0C3H
                                    271 	.globl _PWM0C2H
                                    272 	.globl _PWM0C1H
                                    273 	.globl _PWM0C0H
                                    274 	.globl _PWM0PH
                                    275 	.globl _PSW
                                    276 	.globl _ADCMPH
                                    277 	.globl _ADCMPL
                                    278 	.globl _TH2
                                    279 	.globl _TL2
                                    280 	.globl _RCMP2H
                                    281 	.globl _RCMP2L
                                    282 	.globl _T2MOD
                                    283 	.globl _T2CON
                                    284 	.globl _TA
                                    285 	.globl _RH3
                                    286 	.globl _RL3
                                    287 	.globl _T3CON
                                    288 	.globl _ADCRH
                                    289 	.globl _ADCRL
                                    290 	.globl _I2ADDR
                                    291 	.globl _I2CON
                                    292 	.globl _I2TOC
                                    293 	.globl _I2CLK
                                    294 	.globl _I2STAT
                                    295 	.globl _I2DAT
                                    296 	.globl _SADDR_1
                                    297 	.globl _SADEN_1
                                    298 	.globl _SADEN
                                    299 	.globl _IP
                                    300 	.globl _PWMINTC
                                    301 	.globl _IPH
                                    302 	.globl _TOE
                                    303 	.globl _P1M2
                                    304 	.globl _P1M1
                                    305 	.globl _P0M2
                                    306 	.globl _P0M1
                                    307 	.globl _P3
                                    308 	.globl _IAPCN
                                    309 	.globl _IAPFD
                                    310 	.globl _P3M2
                                    311 	.globl _P3M1
                                    312 	.globl _BODCON1
                                    313 	.globl _WDCON
                                    314 	.globl _SADDR
                                    315 	.globl _IE
                                    316 	.globl _IAPAH
                                    317 	.globl _IAPAL
                                    318 	.globl _IAPUEN
                                    319 	.globl _IAPTRG
                                    320 	.globl _BODCON0
                                    321 	.globl _AUXR1
                                    322 	.globl _P2
                                    323 	.globl _CHPCON
                                    324 	.globl _EIE1
                                    325 	.globl _EIE
                                    326 	.globl _SBUF_1
                                    327 	.globl _SBUF
                                    328 	.globl _SCON
                                    329 	.globl _CKEN
                                    330 	.globl _CKSWT
                                    331 	.globl _CKDIV
                                    332 	.globl _CAPCON2
                                    333 	.globl _CAPCON1
                                    334 	.globl _CAPCON0
                                    335 	.globl _SFRS
                                    336 	.globl _P1
                                    337 	.globl _WKCON
                                    338 	.globl _CKCON
                                    339 	.globl _TH1
                                    340 	.globl _TH0
                                    341 	.globl _TL1
                                    342 	.globl _TL0
                                    343 	.globl _TMOD
                                    344 	.globl _TCON
                                    345 	.globl _PCON
                                    346 	.globl _RWK
                                    347 	.globl _RCTRIM1
                                    348 	.globl _RCTRIM0
                                    349 	.globl _DPH
                                    350 	.globl _DPL
                                    351 	.globl _SP
                                    352 	.globl _P0
                                    353 	.globl _IAPCFBuf
                                    354 	.globl _IAPDataBuf
                                    355 	.globl _UCIDBuffer
                                    356 	.globl _UIDBuffer
                                    357 	.globl _DIDBuffer
                                    358 	.globl _Modify_CONFIG_PARM_5
                                    359 	.globl _Modify_CONFIG_PARM_4
                                    360 	.globl _Modify_CONFIG_PARM_3
                                    361 	.globl _Modify_CONFIG_PARM_2
                                    362 	.globl _Program_Verify_APROM_PARM_2
                                    363 	.globl _Program_APROM_PARM_2
                                    364 	.globl _Erase_Verify_APROM_PARM_2
                                    365 	.globl _Erase_APROM_PARM_2
                                    366 	.globl _Program_Verify_LDROM_PARM_2
                                    367 	.globl _Program_LDROM_PARM_2
                                    368 	.globl _Erase_Verify_LDROM_PARM_2
                                    369 	.globl _Erase_LDROM_PARM_2
                                    370 	.globl _Trigger_IAP
                                    371 	.globl _Erase_LDROM
                                    372 	.globl _Erase_Verify_LDROM
                                    373 	.globl _Program_LDROM
                                    374 	.globl _Program_Verify_LDROM
                                    375 	.globl _Erase_APROM
                                    376 	.globl _Erase_Verify_APROM
                                    377 	.globl _Program_APROM
                                    378 	.globl _Program_Verify_APROM
                                    379 	.globl _Modify_CONFIG
                                    380 	.globl _Read_UID
                                    381 	.globl _Read_UCID
                                    382 	.globl _Read_DID
                                    383 ;--------------------------------------------------------
                                    384 ; special function registers
                                    385 ;--------------------------------------------------------
                                    386 	.area RSEG    (ABS,DATA)
      000000                        387 	.org 0x0000
                           000080   388 _P0	=	0x0080
                           000081   389 _SP	=	0x0081
                           000082   390 _DPL	=	0x0082
                           000083   391 _DPH	=	0x0083
                           000084   392 _RCTRIM0	=	0x0084
                           000085   393 _RCTRIM1	=	0x0085
                           000086   394 _RWK	=	0x0086
                           000087   395 _PCON	=	0x0087
                           000088   396 _TCON	=	0x0088
                           000089   397 _TMOD	=	0x0089
                           00008A   398 _TL0	=	0x008a
                           00008B   399 _TL1	=	0x008b
                           00008C   400 _TH0	=	0x008c
                           00008D   401 _TH1	=	0x008d
                           00008E   402 _CKCON	=	0x008e
                           00008F   403 _WKCON	=	0x008f
                           000090   404 _P1	=	0x0090
                           000091   405 _SFRS	=	0x0091
                           000092   406 _CAPCON0	=	0x0092
                           000093   407 _CAPCON1	=	0x0093
                           000094   408 _CAPCON2	=	0x0094
                           000095   409 _CKDIV	=	0x0095
                           000096   410 _CKSWT	=	0x0096
                           000097   411 _CKEN	=	0x0097
                           000098   412 _SCON	=	0x0098
                           000099   413 _SBUF	=	0x0099
                           00009A   414 _SBUF_1	=	0x009a
                           00009B   415 _EIE	=	0x009b
                           00009C   416 _EIE1	=	0x009c
                           00009F   417 _CHPCON	=	0x009f
                           0000A0   418 _P2	=	0x00a0
                           0000A2   419 _AUXR1	=	0x00a2
                           0000A3   420 _BODCON0	=	0x00a3
                           0000A4   421 _IAPTRG	=	0x00a4
                           0000A5   422 _IAPUEN	=	0x00a5
                           0000A6   423 _IAPAL	=	0x00a6
                           0000A7   424 _IAPAH	=	0x00a7
                           0000A8   425 _IE	=	0x00a8
                           0000A9   426 _SADDR	=	0x00a9
                           0000AA   427 _WDCON	=	0x00aa
                           0000AB   428 _BODCON1	=	0x00ab
                           0000AC   429 _P3M1	=	0x00ac
                           0000AD   430 _P3M2	=	0x00ad
                           0000AE   431 _IAPFD	=	0x00ae
                           0000AF   432 _IAPCN	=	0x00af
                           0000B0   433 _P3	=	0x00b0
                           0000B1   434 _P0M1	=	0x00b1
                           0000B2   435 _P0M2	=	0x00b2
                           0000B3   436 _P1M1	=	0x00b3
                           0000B4   437 _P1M2	=	0x00b4
                           0000B5   438 _TOE	=	0x00b5
                           0000B7   439 _IPH	=	0x00b7
                           0000B7   440 _PWMINTC	=	0x00b7
                           0000B8   441 _IP	=	0x00b8
                           0000B9   442 _SADEN	=	0x00b9
                           0000BA   443 _SADEN_1	=	0x00ba
                           0000BB   444 _SADDR_1	=	0x00bb
                           0000BC   445 _I2DAT	=	0x00bc
                           0000BD   446 _I2STAT	=	0x00bd
                           0000BE   447 _I2CLK	=	0x00be
                           0000BF   448 _I2TOC	=	0x00bf
                           0000C0   449 _I2CON	=	0x00c0
                           0000C1   450 _I2ADDR	=	0x00c1
                           0000C2   451 _ADCRL	=	0x00c2
                           0000C3   452 _ADCRH	=	0x00c3
                           0000C4   453 _T3CON	=	0x00c4
                           0000C5   454 _RL3	=	0x00c5
                           0000C6   455 _RH3	=	0x00c6
                           0000C7   456 _TA	=	0x00c7
                           0000C8   457 _T2CON	=	0x00c8
                           0000C9   458 _T2MOD	=	0x00c9
                           0000CA   459 _RCMP2L	=	0x00ca
                           0000CB   460 _RCMP2H	=	0x00cb
                           0000CC   461 _TL2	=	0x00cc
                           0000CD   462 _TH2	=	0x00cd
                           0000CE   463 _ADCMPL	=	0x00ce
                           0000CF   464 _ADCMPH	=	0x00cf
                           0000D0   465 _PSW	=	0x00d0
                           0000D1   466 _PWM0PH	=	0x00d1
                           0000D2   467 _PWM0C0H	=	0x00d2
                           0000D3   468 _PWM0C1H	=	0x00d3
                           0000D4   469 _PWM0C2H	=	0x00d4
                           0000D5   470 _PWM0C3H	=	0x00d5
                           0000D6   471 _PNP	=	0x00d6
                           0000D7   472 _PWM0FBD	=	0x00d7
                           0000D8   473 _PWM0CON0	=	0x00d8
                           0000D9   474 _PWM0PL	=	0x00d9
                           0000DA   475 _PWM0C0L	=	0x00da
                           0000DB   476 _PWM0C1L	=	0x00db
                           0000DC   477 _PWM0C2L	=	0x00dc
                           0000DD   478 _PWM0C3L	=	0x00dd
                           0000DE   479 _PIOCON0	=	0x00de
                           0000DF   480 _PWM0CON1	=	0x00df
                           0000E0   481 _ACC	=	0x00e0
                           0000E1   482 _ADCCON1	=	0x00e1
                           0000E2   483 _ADCCON2	=	0x00e2
                           0000E3   484 _ADCDLY	=	0x00e3
                           0000E4   485 _C0L	=	0x00e4
                           0000E5   486 _C0H	=	0x00e5
                           0000E6   487 _C1L	=	0x00e6
                           0000E7   488 _C1H	=	0x00e7
                           0000E8   489 _ADCCON0	=	0x00e8
                           0000E9   490 _PICON	=	0x00e9
                           0000EA   491 _PINEN	=	0x00ea
                           0000EB   492 _PIPEN	=	0x00eb
                           0000EC   493 _PIF	=	0x00ec
                           0000ED   494 _C2L	=	0x00ed
                           0000EE   495 _C2H	=	0x00ee
                           0000EF   496 _EIP	=	0x00ef
                           0000F0   497 _B	=	0x00f0
                           0000F1   498 _CAPCON3	=	0x00f1
                           0000F2   499 _CAPCON4	=	0x00f2
                           0000F3   500 _SPCR	=	0x00f3
                           0000F4   501 _SPSR	=	0x00f4
                           0000F5   502 _SPDR	=	0x00f5
                           0000F6   503 _AINDIDS0	=	0x00f6
                           0000F7   504 _EIPH	=	0x00f7
                           0000F8   505 _SCON_1	=	0x00f8
                           0000F9   506 _PWM0DTEN	=	0x00f9
                           0000FA   507 _PWM0DTCNT	=	0x00fa
                           0000FB   508 _PWM0MEN	=	0x00fb
                           0000FC   509 _PWM0MD	=	0x00fc
                           0000FD   510 _PORDIS	=	0x00fd
                           0000FE   511 _EIP1	=	0x00fe
                           0000FF   512 _EIPH1	=	0x00ff
                           0000AC   513 _P3S	=	0x00ac
                           0000AD   514 _P3SR	=	0x00ad
                           0000B1   515 _P0S	=	0x00b1
                           0000B2   516 _P0SR	=	0x00b2
                           0000B3   517 _P1S	=	0x00b3
                           0000B4   518 _P1SR	=	0x00b4
                           0000B7   519 _PWM0INTC	=	0x00b7
                           0000C4   520 _PWM0C4H	=	0x00c4
                           0000C5   521 _PWM0C5H	=	0x00c5
                           0000C6   522 _PIOCON1	=	0x00c6
                           0000CC   523 _PWM0C4L	=	0x00cc
                           0000CD   524 _PWM0C5L	=	0x00cd
                           0000F3   525 _SPCR2	=	0x00f3
                           0000FF   526 _LVRDIS	=	0x00ff
                           000084   527 _ADCBAL	=	0x0084
                           000085   528 _ADCBAH	=	0x0085
                           000086   529 _ADCCON3	=	0x0086
                           000089   530 _P2M1	=	0x0089
                           00008A   531 _P2M2	=	0x008a
                           00008B   532 _P2SR	=	0x008b
                           00008C   533 _P2S	=	0x008c
                           00008D   534 _ADCSN	=	0x008d
                           00008E   535 _ADCCN	=	0x008e
                           00008F   536 _ADCSR	=	0x008f
                           000092   537 _P0UP	=	0x0092
                           000093   538 _P1UP	=	0x0093
                           000094   539 _P2UP	=	0x0094
                           000095   540 _P3UP	=	0x0095
                           000097   541 _RWKH	=	0x0097
                           000099   542 _AINDIDS1	=	0x0099
                           00009A   543 _P0DW	=	0x009a
                           00009B   544 _P1DW	=	0x009b
                           00009C   545 _P2DW	=	0x009c
                           00009D   546 _P3DW	=	0x009d
                           0000A1   547 _AUXR2	=	0x00a1
                           0000A2   548 _AUXR3	=	0x00a2
                           0000A3   549 _AUXR4	=	0x00a3
                           0000A4   550 _AUXR5	=	0x00a4
                           0000A5   551 _AUXR6	=	0x00a5
                           0000A6   552 _AUXR7	=	0x00a6
                           0000A7   553 _AUXR8	=	0x00a7
                           0000A9   554 _PWM1PH	=	0x00a9
                           0000AA   555 _PWM1C0H	=	0x00aa
                           0000AB   556 _PWM1C1H	=	0x00ab
                           0000AC   557 _PWM1MD	=	0x00ac
                           0000AD   558 _PWM1MEN	=	0x00ad
                           0000B1   559 _PWM1PL	=	0x00b1
                           0000B2   560 _PWM1C0L	=	0x00b2
                           0000B3   561 _PWM1C1L	=	0x00b3
                           0000B4   562 _PWM1CON0	=	0x00b4
                           0000B5   563 _PWM1CON1	=	0x00b5
                           0000B6   564 _PWM1INTC	=	0x00b6
                           0000B7   565 _PIOCON2	=	0x00b7
                           0000B9   566 _PWM2PH	=	0x00b9
                           0000BA   567 _PWM2C0H	=	0x00ba
                           0000BB   568 _PWM2C1H	=	0x00bb
                           0000BC   569 _PWM2MD	=	0x00bc
                           0000BD   570 _PWM2MEN	=	0x00bd
                           0000C1   571 _PWM2PL	=	0x00c1
                           0000C2   572 _PWM2C0L	=	0x00c2
                           0000C3   573 _PWM2C1L	=	0x00c3
                           0000C4   574 _PWM2CON0	=	0x00c4
                           0000C5   575 _PWM2CON1	=	0x00c5
                           0000C6   576 _PWM2INTC	=	0x00c6
                           0000C9   577 _PWM3PH	=	0x00c9
                           0000CA   578 _PWM3C0H	=	0x00ca
                           0000CB   579 _PWM3C1H	=	0x00cb
                           0000CC   580 _PWM3MD	=	0x00cc
                           0000CD   581 _PWM3MEN	=	0x00cd
                           0000CE   582 _EIP2	=	0x00ce
                           0000CF   583 _EIPH2	=	0x00cf
                           0000D1   584 _PWM3PL	=	0x00d1
                           0000D2   585 _PWM3C0L	=	0x00d2
                           0000D3   586 _PWM3C1L	=	0x00d3
                           0000D4   587 _PWM3CON0	=	0x00d4
                           0000D5   588 _PWM3CON1	=	0x00d5
                           0000D6   589 _PWM3INTC	=	0x00d6
                           0000D7   590 _XTLCON	=	0x00d7
                           0000D9   591 _SC0DR	=	0x00d9
                           0000DA   592 _SC0EGT	=	0x00da
                           0000DB   593 _SC0ETURD0	=	0x00db
                           0000DC   594 _SC0ETURD1	=	0x00dc
                           0000DD   595 _SC0IE	=	0x00dd
                           0000DE   596 _SC0IS	=	0x00de
                           0000DF   597 _SC0TSR	=	0x00df
                           0000E1   598 _SC1DR	=	0x00e1
                           0000E2   599 _SC1EGT	=	0x00e2
                           0000E3   600 _SC1ETURD0	=	0x00e3
                           0000E4   601 _SC1ETURD1	=	0x00e4
                           0000E5   602 _SC1IE	=	0x00e5
                           0000E6   603 _SC1IS	=	0x00e6
                           0000E7   604 _SC1TSR	=	0x00e7
                           0000E9   605 _SC2DR	=	0x00e9
                           0000EA   606 _SC2EGT	=	0x00ea
                           0000EB   607 _SC2ETURD0	=	0x00eb
                           0000EC   608 _SC2ETURD1	=	0x00ec
                           0000ED   609 _SC2IE	=	0x00ed
                           0000EE   610 _SC2IS	=	0x00ee
                           0000EF   611 _SC2TSR	=	0x00ef
                           0000F1   612 _SC0CR0	=	0x00f1
                           0000F2   613 _SC0CR1	=	0x00f2
                           0000F3   614 _SC1CR0	=	0x00f3
                           0000F4   615 _SC1CR1	=	0x00f4
                           0000F5   616 _SC2CR0	=	0x00f5
                           0000F6   617 _SC2CR1	=	0x00f6
                           0000F7   618 _PIPS7	=	0x00f7
                           0000F9   619 _PIPS0	=	0x00f9
                           0000FA   620 _PIPS1	=	0x00fa
                           0000FB   621 _PIPS2	=	0x00fb
                           0000FC   622 _PIPS3	=	0x00fc
                           0000FD   623 _PIPS4	=	0x00fd
                           0000FE   624 _PIPS5	=	0x00fe
                           0000FF   625 _PIPS6	=	0x00ff
                                    626 ;--------------------------------------------------------
                                    627 ; special function bits
                                    628 ;--------------------------------------------------------
                                    629 	.area RSEG    (ABS,DATA)
      000000                        630 	.org 0x0000
                           0000FF   631 _SM0_1	=	0x00ff
                           0000FF   632 _FE_1	=	0x00ff
                           0000FE   633 _SM1_1	=	0x00fe
                           0000FD   634 _SM2_1	=	0x00fd
                           0000FC   635 _REN_1	=	0x00fc
                           0000FB   636 _TB8_1	=	0x00fb
                           0000FA   637 _RB8_1	=	0x00fa
                           0000F9   638 _TI_1	=	0x00f9
                           0000F8   639 _RI_1	=	0x00f8
                           0000EF   640 _ADCF	=	0x00ef
                           0000EE   641 _ADCS	=	0x00ee
                           0000ED   642 _ETGSEL1	=	0x00ed
                           0000EC   643 _ETGSEL0	=	0x00ec
                           0000EB   644 _ADCHS3	=	0x00eb
                           0000EA   645 _ADCHS2	=	0x00ea
                           0000E9   646 _ADCHS1	=	0x00e9
                           0000E8   647 _ADCHS0	=	0x00e8
                           0000DF   648 _PWMRUN	=	0x00df
                           0000DE   649 _LOAD	=	0x00de
                           0000DD   650 _PWMF	=	0x00dd
                           0000DC   651 _CLRPWM	=	0x00dc
                           0000D7   652 _CY	=	0x00d7
                           0000D6   653 _AC	=	0x00d6
                           0000D5   654 _F0	=	0x00d5
                           0000D4   655 _RS1	=	0x00d4
                           0000D3   656 _RS0	=	0x00d3
                           0000D2   657 _OV	=	0x00d2
                           0000D0   658 _P	=	0x00d0
                           0000CF   659 _TF2	=	0x00cf
                           0000CA   660 _TR2	=	0x00ca
                           0000C8   661 _CM_RL2	=	0x00c8
                           0000C6   662 _I2CEN	=	0x00c6
                           0000C5   663 _STA	=	0x00c5
                           0000C4   664 _STO	=	0x00c4
                           0000C3   665 _SI	=	0x00c3
                           0000C2   666 _AA	=	0x00c2
                           0000C0   667 _I2CPX	=	0x00c0
                           0000BE   668 _PADC	=	0x00be
                           0000BD   669 _PBOD	=	0x00bd
                           0000BC   670 _PS	=	0x00bc
                           0000BB   671 _PT1	=	0x00bb
                           0000BA   672 _PX1	=	0x00ba
                           0000B9   673 _PT0	=	0x00b9
                           0000B8   674 _PX0	=	0x00b8
                           0000B7   675 _P37	=	0x00b7
                           0000B6   676 _P36	=	0x00b6
                           0000B5   677 _P35	=	0x00b5
                           0000B4   678 _P34	=	0x00b4
                           0000B3   679 _P33	=	0x00b3
                           0000B2   680 _P32	=	0x00b2
                           0000B1   681 _P31	=	0x00b1
                           0000B0   682 _P30	=	0x00b0
                           0000AF   683 _EA	=	0x00af
                           0000AE   684 _EADC	=	0x00ae
                           0000AD   685 _EBOD	=	0x00ad
                           0000AC   686 _ES	=	0x00ac
                           0000AB   687 _ET1	=	0x00ab
                           0000AA   688 _EX1	=	0x00aa
                           0000A9   689 _ET0	=	0x00a9
                           0000A8   690 _EX0	=	0x00a8
                           0000A0   691 _P20	=	0x00a0
                           00009F   692 _SM0	=	0x009f
                           00009F   693 _FE	=	0x009f
                           00009E   694 _SM1	=	0x009e
                           00009D   695 _SM2	=	0x009d
                           00009C   696 _REN	=	0x009c
                           00009B   697 _TB8	=	0x009b
                           00009A   698 _RB8	=	0x009a
                           000099   699 _TI	=	0x0099
                           000098   700 _RI	=	0x0098
                           000097   701 _P17	=	0x0097
                           000096   702 _P16	=	0x0096
                           000096   703 _TXD_1	=	0x0096
                           000095   704 _P15	=	0x0095
                           000094   705 _P14	=	0x0094
                           000094   706 _SDA	=	0x0094
                           000093   707 _P13	=	0x0093
                           000093   708 _SCL	=	0x0093
                           000092   709 _P12	=	0x0092
                           000091   710 _P11	=	0x0091
                           000090   711 _P10	=	0x0090
                           00008F   712 _TF1	=	0x008f
                           00008E   713 _TR1	=	0x008e
                           00008D   714 _TF0	=	0x008d
                           00008C   715 _TR0	=	0x008c
                           00008B   716 _IE1	=	0x008b
                           00008A   717 _IT1	=	0x008a
                           000089   718 _IE0	=	0x0089
                           000088   719 _IT0	=	0x0088
                           000087   720 _P07	=	0x0087
                           000087   721 _RXD	=	0x0087
                           000086   722 _P06	=	0x0086
                           000086   723 _TXD	=	0x0086
                           000085   724 _P05	=	0x0085
                           000084   725 _P04	=	0x0084
                           000084   726 _STADC	=	0x0084
                           000083   727 _P03	=	0x0083
                           000082   728 _P02	=	0x0082
                           000082   729 _RXD_1	=	0x0082
                           000081   730 _P01	=	0x0081
                           000081   731 _MISO	=	0x0081
                           000080   732 _P00	=	0x0080
                           000080   733 _MOSI	=	0x0080
                                    734 ;--------------------------------------------------------
                                    735 ; overlayable register banks
                                    736 ;--------------------------------------------------------
                                    737 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        738 	.ds 8
                                    739 ;--------------------------------------------------------
                                    740 ; internal ram data
                                    741 ;--------------------------------------------------------
                                    742 	.area DSEG    (DATA)
      000000                        743 _Erase_LDROM_PARM_2:
      000000                        744 	.ds 2
      000002                        745 _Erase_Verify_LDROM_PARM_2:
      000002                        746 	.ds 2
      000004                        747 _Program_LDROM_PARM_2:
      000004                        748 	.ds 2
      000006                        749 _Program_Verify_LDROM_PARM_2:
      000006                        750 	.ds 2
      000008                        751 _Erase_APROM_PARM_2:
      000008                        752 	.ds 2
      00000A                        753 _Erase_Verify_APROM_PARM_2:
      00000A                        754 	.ds 2
      00000C                        755 _Program_APROM_PARM_2:
      00000C                        756 	.ds 2
      00000E                        757 _Program_Verify_APROM_PARM_2:
      00000E                        758 	.ds 2
      000010                        759 _Modify_CONFIG_PARM_2:
      000010                        760 	.ds 1
      000011                        761 _Modify_CONFIG_PARM_3:
      000011                        762 	.ds 1
      000012                        763 _Modify_CONFIG_PARM_4:
      000012                        764 	.ds 1
      000013                        765 _Modify_CONFIG_PARM_5:
      000013                        766 	.ds 1
                                    767 ;--------------------------------------------------------
                                    768 ; overlayable items in internal ram
                                    769 ;--------------------------------------------------------
                                    770 ;--------------------------------------------------------
                                    771 ; indirectly addressable internal ram data
                                    772 ;--------------------------------------------------------
                                    773 	.area ISEG    (DATA)
                                    774 ;--------------------------------------------------------
                                    775 ; absolute internal ram data
                                    776 ;--------------------------------------------------------
                                    777 	.area IABS    (ABS,DATA)
                                    778 	.area IABS    (ABS,DATA)
                                    779 ;--------------------------------------------------------
                                    780 ; bit data
                                    781 ;--------------------------------------------------------
                                    782 	.area BSEG    (BIT)
                                    783 ;--------------------------------------------------------
                                    784 ; paged external ram data
                                    785 ;--------------------------------------------------------
                                    786 	.area PSEG    (PAG,XDATA)
                                    787 ;--------------------------------------------------------
                                    788 ; uninitialized external ram data
                                    789 ;--------------------------------------------------------
                                    790 	.area XSEG    (XDATA)
      000000                        791 _DIDBuffer::
      000000                        792 	.ds 4
      000004                        793 _UIDBuffer::
      000004                        794 	.ds 12
      000010                        795 _UCIDBuffer::
      000010                        796 	.ds 12
      00001C                        797 _IAPDataBuf::
      00001C                        798 	.ds 128
      00009C                        799 _IAPCFBuf::
      00009C                        800 	.ds 5
                                    801 ;--------------------------------------------------------
                                    802 ; absolute external ram data
                                    803 ;--------------------------------------------------------
                                    804 	.area XABS    (ABS,XDATA)
                                    805 ;--------------------------------------------------------
                                    806 ; initialized external ram data
                                    807 ;--------------------------------------------------------
                                    808 	.area XISEG   (XDATA)
                                    809 	.area HOME    (CODE)
                                    810 	.area GSINIT0 (CODE)
                                    811 	.area GSINIT1 (CODE)
                                    812 	.area GSINIT2 (CODE)
                                    813 	.area GSINIT3 (CODE)
                                    814 	.area GSINIT4 (CODE)
                                    815 	.area GSINIT5 (CODE)
                                    816 	.area GSINIT  (CODE)
                                    817 	.area GSFINAL (CODE)
                                    818 	.area CSEG    (CODE)
                                    819 ;--------------------------------------------------------
                                    820 ; global & static initialisations
                                    821 ;--------------------------------------------------------
                                    822 	.area HOME    (CODE)
                                    823 	.area GSINIT  (CODE)
                                    824 	.area GSFINAL (CODE)
                                    825 	.area GSINIT  (CODE)
                                    826 ;--------------------------------------------------------
                                    827 ; Home
                                    828 ;--------------------------------------------------------
                                    829 	.area HOME    (CODE)
                                    830 	.area HOME    (CODE)
                                    831 ;--------------------------------------------------------
                                    832 ; code
                                    833 ;--------------------------------------------------------
                                    834 	.area CSEG    (CODE)
                                    835 ;------------------------------------------------------------
                                    836 ;Allocation info for local variables in function 'IAP_ERROR'
                                    837 ;------------------------------------------------------------
                                    838 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:19: void IAP_ERROR(void)
                                    839 ;	-----------------------------------------
                                    840 ;	 function IAP_ERROR
                                    841 ;	-----------------------------------------
      000000                        842 _IAP_ERROR:
                           000007   843 	ar7 = 0x07
                           000006   844 	ar6 = 0x06
                           000005   845 	ar5 = 0x05
                           000004   846 	ar4 = 0x04
                           000003   847 	ar3 = 0x03
                           000002   848 	ar2 = 0x02
                           000001   849 	ar1 = 0x01
                           000000   850 	ar0 = 0x00
                                    851 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:21: while (1)
      000000                        852 00102$:
                                    853 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:23: P35 = 0;
                                    854 ;	assignBit
      000000 C2 B5            [12]  855 	clr	_P35
                                    856 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:25: P35 = 1;
                                    857 ;	assignBit
      000002 D2 B5            [12]  858 	setb	_P35
                                    859 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:28: }
      000004 80 FA            [24]  860 	sjmp	00102$
                                    861 ;------------------------------------------------------------
                                    862 ;Allocation info for local variables in function 'Trigger_IAP'
                                    863 ;------------------------------------------------------------
                                    864 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:36: void Trigger_IAP(void)
                                    865 ;	-----------------------------------------
                                    866 ;	 function Trigger_IAP
                                    867 ;	-----------------------------------------
      000006                        868 _Trigger_IAP:
                                    869 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:38: set_IAPTRG_IAPGO;                            //trigger IAP
      000006 75 91 00         [24]  870 	mov	_SFRS,#0x00
                                    871 ;	assignBit
      000009 A2 AF            [12]  872 	mov	c,_EA
      00000B 92*00            [24]  873 	mov	_BIT_TMP,c
                                    874 ;	assignBit
      00000D C2 AF            [12]  875 	clr	_EA
      00000F 75 C7 AA         [24]  876 	mov	_TA,#0xaa
      000012 75 C7 55         [24]  877 	mov	_TA,#0x55
      000015 43 A4 01         [24]  878 	orl	_IAPTRG,#0x01
                                    879 ;	assignBit
      000018 A2*00            [12]  880 	mov	c,_BIT_TMP
      00001A 92 AF            [24]  881 	mov	_EA,c
                                    882 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:40: if ((CHPCON | CLR_BIT6) == 1)                // if fail flag is set, toggle error LED and IAP stop
      00001C 74 BF            [12]  883 	mov	a,#0xbf
      00001E 45 9F            [12]  884 	orl	a,_CHPCON
      000020 FF               [12]  885 	mov	r7,a
      000021 BF 01 19         [24]  886 	cjne	r7,#0x01,00103$
                                    887 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:42: clr_CHPCON_IAPFF;
      000024 75 91 00         [24]  888 	mov	_SFRS,#0x00
                                    889 ;	assignBit
      000027 A2 AF            [12]  890 	mov	c,_EA
      000029 92*00            [24]  891 	mov	_BIT_TMP,c
                                    892 ;	assignBit
      00002B C2 AF            [12]  893 	clr	_EA
      00002D 75 C7 AA         [24]  894 	mov	_TA,#0xaa
      000030 75 C7 55         [24]  895 	mov	_TA,#0x55
      000033 53 9F BF         [24]  896 	anl	_CHPCON,#0xbf
                                    897 ;	assignBit
      000036 A2*00            [12]  898 	mov	c,_BIT_TMP
      000038 92 AF            [24]  899 	mov	_EA,c
                                    900 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:43: IAP_ERROR();
                                    901 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:45: }
      00003A 02r00r00         [24]  902 	ljmp	_IAP_ERROR
      00003D                        903 00103$:
      00003D 22               [24]  904 	ret
                                    905 ;------------------------------------------------------------
                                    906 ;Allocation info for local variables in function 'Erase_LDROM'
                                    907 ;------------------------------------------------------------
                                    908 ;u16IAPDataSize            Allocated with name '_Erase_LDROM_PARM_2'
                                    909 ;u16IAPStartAddress        Allocated to registers r6 r7 
                                    910 ;u16Count                  Allocated to registers r2 r3 
                                    911 ;------------------------------------------------------------
                                    912 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:55: void Erase_LDROM(unsigned int u16IAPStartAddress, unsigned int u16IAPDataSize)
                                    913 ;	-----------------------------------------
                                    914 ;	 function Erase_LDROM
                                    915 ;	-----------------------------------------
      00003E                        916 _Erase_LDROM:
      00003E AE 82            [24]  917 	mov	r6,dpl
      000040 AF 83            [24]  918 	mov	r7,dph
                                    919 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:59: set_CHPCON_IAPEN;                    // Enable IAP function
      000042 75 91 00         [24]  920 	mov	_SFRS,#0x00
                                    921 ;	assignBit
      000045 A2 AF            [12]  922 	mov	c,_EA
      000047 92*00            [24]  923 	mov	_BIT_TMP,c
                                    924 ;	assignBit
      000049 C2 AF            [12]  925 	clr	_EA
      00004B 75 C7 AA         [24]  926 	mov	_TA,#0xaa
      00004E 75 C7 55         [24]  927 	mov	_TA,#0x55
      000051 43 9F 01         [24]  928 	orl	_CHPCON,#0x01
                                    929 ;	assignBit
      000054 A2*00            [12]  930 	mov	c,_BIT_TMP
      000056 92 AF            [24]  931 	mov	_EA,c
                                    932 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:60: set_IAPUEN_LDUEN;                    //  LDROM modify Enable
                                    933 ;	assignBit
      000058 A2 AF            [12]  934 	mov	c,_EA
      00005A 92*00            [24]  935 	mov	_BIT_TMP,c
                                    936 ;	assignBit
      00005C C2 AF            [12]  937 	clr	_EA
      00005E 75 C7 AA         [24]  938 	mov	_TA,#0xaa
      000061 75 C7 55         [24]  939 	mov	_TA,#0x55
      000064 43 A5 02         [24]  940 	orl	_IAPUEN,#0x02
                                    941 ;	assignBit
      000067 A2*00            [12]  942 	mov	c,_BIT_TMP
      000069 92 AF            [24]  943 	mov	_EA,c
                                    944 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:61: IAPFD = 0xFF;                        // IMPORTANT !! To erase function must setting IAPFD = 0xFF
      00006B 75 AE FF         [24]  945 	mov	_IAPFD,#0xff
                                    946 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:62: IAPCN = PAGE_ERASE_LDROM;
      00006E 75 AF 62         [24]  947 	mov	_IAPCN,#0x62
                                    948 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:64: for (u16Count = 0x0000; u16Count < (u16IAPDataSize / PAGE_SIZE); u16Count++)   // Loop page erase LDROM special define address area.
      000071 AC*00            [24]  949 	mov	r4,_Erase_LDROM_PARM_2
      000073 E5*01            [12]  950 	mov	a,(_Erase_LDROM_PARM_2 + 1)
      000075 A2 E7            [12]  951 	mov	c,acc.7
      000077 CC               [12]  952 	xch	a,r4
      000078 33               [12]  953 	rlc	a
      000079 CC               [12]  954 	xch	a,r4
      00007A 33               [12]  955 	rlc	a
      00007B CC               [12]  956 	xch	a,r4
      00007C 54 01            [12]  957 	anl	a,#0x01
      00007E FD               [12]  958 	mov	r5,a
      00007F 7A 00            [12]  959 	mov	r2,#0x00
      000081 7B 00            [12]  960 	mov	r3,#0x00
      000083                        961 00103$:
      000083 C3               [12]  962 	clr	c
      000084 EA               [12]  963 	mov	a,r2
      000085 9C               [12]  964 	subb	a,r4
      000086 EB               [12]  965 	mov	a,r3
      000087 9D               [12]  966 	subb	a,r5
      000088 50 45            [24]  967 	jnc	00101$
                                    968 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:66: IAPAL = LOBYTE(u16Count * PAGE_SIZE + u16IAPStartAddress);
      00008A 8A 01            [24]  969 	mov	ar1,r2
      00008C E9               [12]  970 	mov	a,r1
      00008D 75 F0 80         [24]  971 	mov	b,#0x80
      000090 A4               [48]  972 	mul	ab
      000091 F9               [12]  973 	mov	r1,a
      000092 8E 00            [24]  974 	mov	ar0,r6
      000094 E8               [12]  975 	mov	a,r0
      000095 29               [12]  976 	add	a,r1
      000096 F9               [12]  977 	mov	r1,a
      000097 89 A6            [24]  978 	mov	_IAPAL,r1
                                    979 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:67: IAPAH = HIBYTE(u16Count * PAGE_SIZE + u16IAPStartAddress);
      000099 8A 00            [24]  980 	mov	ar0,r2
      00009B EB               [12]  981 	mov	a,r3
      00009C 54 01            [12]  982 	anl	a,#0x01
      00009E A2 E0            [12]  983 	mov	c,acc.0
      0000A0 C8               [12]  984 	xch	a,r0
      0000A1 13               [12]  985 	rrc	a
      0000A2 C8               [12]  986 	xch	a,r0
      0000A3 13               [12]  987 	rrc	a
      0000A4 C8               [12]  988 	xch	a,r0
      0000A5 F9               [12]  989 	mov	r1,a
      0000A6 EE               [12]  990 	mov	a,r6
      0000A7 28               [12]  991 	add	a,r0
      0000A8 EF               [12]  992 	mov	a,r7
      0000A9 39               [12]  993 	addc	a,r1
      0000AA F9               [12]  994 	mov	r1,a
      0000AB 89 A7            [24]  995 	mov	_IAPAH,r1
                                    996 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:68: Trigger_IAP();
      0000AD C0 07            [24]  997 	push	ar7
      0000AF C0 06            [24]  998 	push	ar6
      0000B1 C0 05            [24]  999 	push	ar5
      0000B3 C0 04            [24] 1000 	push	ar4
      0000B5 C0 03            [24] 1001 	push	ar3
      0000B7 C0 02            [24] 1002 	push	ar2
      0000B9 12r00r06         [24] 1003 	lcall	_Trigger_IAP
      0000BC D0 02            [24] 1004 	pop	ar2
      0000BE D0 03            [24] 1005 	pop	ar3
      0000C0 D0 04            [24] 1006 	pop	ar4
      0000C2 D0 05            [24] 1007 	pop	ar5
      0000C4 D0 06            [24] 1008 	pop	ar6
      0000C6 D0 07            [24] 1009 	pop	ar7
                                   1010 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:64: for (u16Count = 0x0000; u16Count < (u16IAPDataSize / PAGE_SIZE); u16Count++)   // Loop page erase LDROM special define address area.
      0000C8 0A               [12] 1011 	inc	r2
      0000C9 BA 00 B7         [24] 1012 	cjne	r2,#0x00,00103$
      0000CC 0B               [12] 1013 	inc	r3
      0000CD 80 B4            [24] 1014 	sjmp	00103$
      0000CF                       1015 00101$:
                                   1016 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:71: clr_IAPUEN_LDUEN;                    // Disable LDROM modify
                                   1017 ;	assignBit
      0000CF A2 AF            [12] 1018 	mov	c,_EA
      0000D1 92*00            [24] 1019 	mov	_BIT_TMP,c
                                   1020 ;	assignBit
      0000D3 C2 AF            [12] 1021 	clr	_EA
      0000D5 75 C7 AA         [24] 1022 	mov	_TA,#0xaa
      0000D8 75 C7 55         [24] 1023 	mov	_TA,#0x55
      0000DB 53 A5 FD         [24] 1024 	anl	_IAPUEN,#0xfd
                                   1025 ;	assignBit
      0000DE A2*00            [12] 1026 	mov	c,_BIT_TMP
      0000E0 92 AF            [24] 1027 	mov	_EA,c
                                   1028 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:72: clr_CHPCON_IAPEN;                    // Disable IAP
      0000E2 75 91 00         [24] 1029 	mov	_SFRS,#0x00
                                   1030 ;	assignBit
      0000E5 A2 AF            [12] 1031 	mov	c,_EA
      0000E7 92*00            [24] 1032 	mov	_BIT_TMP,c
                                   1033 ;	assignBit
      0000E9 C2 AF            [12] 1034 	clr	_EA
      0000EB 75 C7 AA         [24] 1035 	mov	_TA,#0xaa
      0000EE 75 C7 55         [24] 1036 	mov	_TA,#0x55
      0000F1 53 9F FE         [24] 1037 	anl	_CHPCON,#0xfe
                                   1038 ;	assignBit
      0000F4 A2*00            [12] 1039 	mov	c,_BIT_TMP
      0000F6 92 AF            [24] 1040 	mov	_EA,c
                                   1041 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:73: }
      0000F8 22               [24] 1042 	ret
                                   1043 ;------------------------------------------------------------
                                   1044 ;Allocation info for local variables in function 'Erase_Verify_LDROM'
                                   1045 ;------------------------------------------------------------
                                   1046 ;u16IAPDataSize            Allocated with name '_Erase_Verify_LDROM_PARM_2'
                                   1047 ;u16IAPStartAddress        Allocated to registers r6 r7 
                                   1048 ;u16Count                  Allocated to registers r6 r7 
                                   1049 ;------------------------------------------------------------
                                   1050 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:83: void Erase_Verify_LDROM(unsigned int u16IAPStartAddress, unsigned int u16IAPDataSize)
                                   1051 ;	-----------------------------------------
                                   1052 ;	 function Erase_Verify_LDROM
                                   1053 ;	-----------------------------------------
      0000F9                       1054 _Erase_Verify_LDROM:
      0000F9 AE 82            [24] 1055 	mov	r6,dpl
      0000FB AF 83            [24] 1056 	mov	r7,dph
                                   1057 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:86: set_CHPCON_IAPEN;
      0000FD 75 91 00         [24] 1058 	mov	_SFRS,#0x00
                                   1059 ;	assignBit
      000100 A2 AF            [12] 1060 	mov	c,_EA
      000102 92*00            [24] 1061 	mov	_BIT_TMP,c
                                   1062 ;	assignBit
      000104 C2 AF            [12] 1063 	clr	_EA
      000106 75 C7 AA         [24] 1064 	mov	_TA,#0xaa
      000109 75 C7 55         [24] 1065 	mov	_TA,#0x55
      00010C 43 9F 01         [24] 1066 	orl	_CHPCON,#0x01
                                   1067 ;	assignBit
      00010F A2*00            [12] 1068 	mov	c,_BIT_TMP
      000111 92 AF            [24] 1069 	mov	_EA,c
                                   1070 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:87: IAPAL = LOBYTE(u16IAPStartAddress);
      000113 8E A6            [24] 1071 	mov	_IAPAL,r6
                                   1072 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:88: IAPAH = HIBYTE(u16IAPStartAddress);
      000115 8F A7            [24] 1073 	mov	_IAPAH,r7
                                   1074 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:89: IAPCN = BYTE_READ_LDROM;
      000117 75 AF 40         [24] 1075 	mov	_IAPCN,#0x40
                                   1076 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:91: for (u16Count = 0; u16Count < u16IAPDataSize; u16Count++)
      00011A 7E 00            [12] 1077 	mov	r6,#0x00
      00011C 7F 00            [12] 1078 	mov	r7,#0x00
      00011E                       1079 00107$:
      00011E C3               [12] 1080 	clr	c
      00011F EE               [12] 1081 	mov	a,r6
      000120 95*02            [12] 1082 	subb	a,_Erase_Verify_LDROM_PARM_2
      000122 EF               [12] 1083 	mov	a,r7
      000123 95*03            [12] 1084 	subb	a,(_Erase_Verify_LDROM_PARM_2 + 1)
      000125 50 35            [24] 1085 	jnc	00105$
                                   1086 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:93: IAPFD = 0x00;
      000127 75 AE 00         [24] 1087 	mov	_IAPFD,#0x00
                                   1088 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:94: Trigger_IAP();
      00012A C0 07            [24] 1089 	push	ar7
      00012C C0 06            [24] 1090 	push	ar6
      00012E 12r00r06         [24] 1091 	lcall	_Trigger_IAP
      000131 D0 06            [24] 1092 	pop	ar6
      000133 D0 07            [24] 1093 	pop	ar7
                                   1094 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:96: if (IAPFD != 0xFF)
      000135 74 FF            [12] 1095 	mov	a,#0xff
      000137 B5 AE 02         [24] 1096 	cjne	a,_IAPFD,00129$
      00013A 80 0B            [24] 1097 	sjmp	00102$
      00013C                       1098 00129$:
                                   1099 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:97: IAP_ERROR();
      00013C C0 07            [24] 1100 	push	ar7
      00013E C0 06            [24] 1101 	push	ar6
      000140 12r00r00         [24] 1102 	lcall	_IAP_ERROR
      000143 D0 06            [24] 1103 	pop	ar6
      000145 D0 07            [24] 1104 	pop	ar7
      000147                       1105 00102$:
                                   1106 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:99: IAPAL++;
      000147 E5 A6            [12] 1107 	mov	a,_IAPAL
      000149 04               [12] 1108 	inc	a
      00014A F5 A6            [12] 1109 	mov	_IAPAL,a
                                   1110 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:101: if (IAPAL == 0x00)
      00014C E5 A6            [12] 1111 	mov	a,_IAPAL
      00014E 70 05            [24] 1112 	jnz	00108$
                                   1113 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:102: IAPAH++;
      000150 E5 A7            [12] 1114 	mov	a,_IAPAH
      000152 04               [12] 1115 	inc	a
      000153 F5 A7            [12] 1116 	mov	_IAPAH,a
      000155                       1117 00108$:
                                   1118 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:91: for (u16Count = 0; u16Count < u16IAPDataSize; u16Count++)
      000155 0E               [12] 1119 	inc	r6
      000156 BE 00 C5         [24] 1120 	cjne	r6,#0x00,00107$
      000159 0F               [12] 1121 	inc	r7
      00015A 80 C2            [24] 1122 	sjmp	00107$
      00015C                       1123 00105$:
                                   1124 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:105: clr_CHPCON_IAPEN;
      00015C 75 91 00         [24] 1125 	mov	_SFRS,#0x00
                                   1126 ;	assignBit
      00015F A2 AF            [12] 1127 	mov	c,_EA
      000161 92*00            [24] 1128 	mov	_BIT_TMP,c
                                   1129 ;	assignBit
      000163 C2 AF            [12] 1130 	clr	_EA
      000165 75 C7 AA         [24] 1131 	mov	_TA,#0xaa
      000168 75 C7 55         [24] 1132 	mov	_TA,#0x55
      00016B 53 9F FE         [24] 1133 	anl	_CHPCON,#0xfe
                                   1134 ;	assignBit
      00016E A2*00            [12] 1135 	mov	c,_BIT_TMP
      000170 92 AF            [24] 1136 	mov	_EA,c
                                   1137 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:106: }
      000172 22               [24] 1138 	ret
                                   1139 ;------------------------------------------------------------
                                   1140 ;Allocation info for local variables in function 'Program_LDROM'
                                   1141 ;------------------------------------------------------------
                                   1142 ;u16IAPDataSize            Allocated with name '_Program_LDROM_PARM_2'
                                   1143 ;u16IAPStartAddress        Allocated to registers r6 r7 
                                   1144 ;u16Count                  Allocated to registers r6 r7 
                                   1145 ;------------------------------------------------------------
                                   1146 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:116: void Program_LDROM(unsigned int u16IAPStartAddress, unsigned int u16IAPDataSize)
                                   1147 ;	-----------------------------------------
                                   1148 ;	 function Program_LDROM
                                   1149 ;	-----------------------------------------
      000173                       1150 _Program_LDROM:
      000173 AE 82            [24] 1151 	mov	r6,dpl
      000175 AF 83            [24] 1152 	mov	r7,dph
                                   1153 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:120: set_CHPCON_IAPEN;
      000177 75 91 00         [24] 1154 	mov	_SFRS,#0x00
                                   1155 ;	assignBit
      00017A A2 AF            [12] 1156 	mov	c,_EA
      00017C 92*00            [24] 1157 	mov	_BIT_TMP,c
                                   1158 ;	assignBit
      00017E C2 AF            [12] 1159 	clr	_EA
      000180 75 C7 AA         [24] 1160 	mov	_TA,#0xaa
      000183 75 C7 55         [24] 1161 	mov	_TA,#0x55
      000186 43 9F 01         [24] 1162 	orl	_CHPCON,#0x01
                                   1163 ;	assignBit
      000189 A2*00            [12] 1164 	mov	c,_BIT_TMP
      00018B 92 AF            [24] 1165 	mov	_EA,c
                                   1166 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:121: set_IAPUEN_LDUEN;
                                   1167 ;	assignBit
      00018D A2 AF            [12] 1168 	mov	c,_EA
      00018F 92*00            [24] 1169 	mov	_BIT_TMP,c
                                   1170 ;	assignBit
      000191 C2 AF            [12] 1171 	clr	_EA
      000193 75 C7 AA         [24] 1172 	mov	_TA,#0xaa
      000196 75 C7 55         [24] 1173 	mov	_TA,#0x55
      000199 43 A5 02         [24] 1174 	orl	_IAPUEN,#0x02
                                   1175 ;	assignBit
      00019C A2*00            [12] 1176 	mov	c,_BIT_TMP
      00019E 92 AF            [24] 1177 	mov	_EA,c
                                   1178 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:122: IAPAL = LOBYTE(u16IAPStartAddress);
      0001A0 8E A6            [24] 1179 	mov	_IAPAL,r6
                                   1180 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:123: IAPAH = HIBYTE(u16IAPStartAddress);
      0001A2 8F A7            [24] 1181 	mov	_IAPAH,r7
                                   1182 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:124: IAPCN = BYTE_PROGRAM_LDROM;
      0001A4 75 AF 61         [24] 1183 	mov	_IAPCN,#0x61
                                   1184 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:126: for (u16Count = 0; u16Count < u16IAPDataSize; u16Count++)
      0001A7 7E 00            [12] 1185 	mov	r6,#0x00
      0001A9 7F 00            [12] 1186 	mov	r7,#0x00
      0001AB                       1187 00105$:
      0001AB C3               [12] 1188 	clr	c
      0001AC EE               [12] 1189 	mov	a,r6
      0001AD 95*04            [12] 1190 	subb	a,_Program_LDROM_PARM_2
      0001AF EF               [12] 1191 	mov	a,r7
      0001B0 95*05            [12] 1192 	subb	a,(_Program_LDROM_PARM_2 + 1)
      0001B2 50 2D            [24] 1193 	jnc	00103$
                                   1194 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:128: IAPFD = IAPDataBuf[u16Count];
      0001B4 EE               [12] 1195 	mov	a,r6
      0001B5 24r1C            [12] 1196 	add	a,#_IAPDataBuf
      0001B7 F5 82            [12] 1197 	mov	dpl,a
      0001B9 EF               [12] 1198 	mov	a,r7
      0001BA 34s00            [12] 1199 	addc	a,#(_IAPDataBuf >> 8)
      0001BC F5 83            [12] 1200 	mov	dph,a
      0001BE E0               [24] 1201 	movx	a,@dptr
      0001BF F5 AE            [12] 1202 	mov	_IAPFD,a
                                   1203 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:129: Trigger_IAP();
      0001C1 C0 07            [24] 1204 	push	ar7
      0001C3 C0 06            [24] 1205 	push	ar6
      0001C5 12r00r06         [24] 1206 	lcall	_Trigger_IAP
      0001C8 D0 06            [24] 1207 	pop	ar6
      0001CA D0 07            [24] 1208 	pop	ar7
                                   1209 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:130: IAPAL++;
      0001CC E5 A6            [12] 1210 	mov	a,_IAPAL
      0001CE 04               [12] 1211 	inc	a
      0001CF F5 A6            [12] 1212 	mov	_IAPAL,a
                                   1213 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:132: if (IAPAL == 0)
      0001D1 E5 A6            [12] 1214 	mov	a,_IAPAL
      0001D3 70 05            [24] 1215 	jnz	00106$
                                   1216 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:134: IAPAH++;
      0001D5 E5 A7            [12] 1217 	mov	a,_IAPAH
      0001D7 04               [12] 1218 	inc	a
      0001D8 F5 A7            [12] 1219 	mov	_IAPAH,a
      0001DA                       1220 00106$:
                                   1221 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:126: for (u16Count = 0; u16Count < u16IAPDataSize; u16Count++)
      0001DA 0E               [12] 1222 	inc	r6
      0001DB BE 00 CD         [24] 1223 	cjne	r6,#0x00,00105$
      0001DE 0F               [12] 1224 	inc	r7
      0001DF 80 CA            [24] 1225 	sjmp	00105$
      0001E1                       1226 00103$:
                                   1227 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:138: clr_IAPUEN_LDUEN;
                                   1228 ;	assignBit
      0001E1 A2 AF            [12] 1229 	mov	c,_EA
      0001E3 92*00            [24] 1230 	mov	_BIT_TMP,c
                                   1231 ;	assignBit
      0001E5 C2 AF            [12] 1232 	clr	_EA
      0001E7 75 C7 AA         [24] 1233 	mov	_TA,#0xaa
      0001EA 75 C7 55         [24] 1234 	mov	_TA,#0x55
      0001ED 53 A5 FD         [24] 1235 	anl	_IAPUEN,#0xfd
                                   1236 ;	assignBit
      0001F0 A2*00            [12] 1237 	mov	c,_BIT_TMP
      0001F2 92 AF            [24] 1238 	mov	_EA,c
                                   1239 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:139: clr_CHPCON_IAPEN;
      0001F4 75 91 00         [24] 1240 	mov	_SFRS,#0x00
                                   1241 ;	assignBit
      0001F7 A2 AF            [12] 1242 	mov	c,_EA
      0001F9 92*00            [24] 1243 	mov	_BIT_TMP,c
                                   1244 ;	assignBit
      0001FB C2 AF            [12] 1245 	clr	_EA
      0001FD 75 C7 AA         [24] 1246 	mov	_TA,#0xaa
      000200 75 C7 55         [24] 1247 	mov	_TA,#0x55
      000203 53 9F FE         [24] 1248 	anl	_CHPCON,#0xfe
                                   1249 ;	assignBit
      000206 A2*00            [12] 1250 	mov	c,_BIT_TMP
      000208 92 AF            [24] 1251 	mov	_EA,c
                                   1252 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:140: }
      00020A 22               [24] 1253 	ret
                                   1254 ;------------------------------------------------------------
                                   1255 ;Allocation info for local variables in function 'Program_Verify_LDROM'
                                   1256 ;------------------------------------------------------------
                                   1257 ;u16IAPDataSize            Allocated with name '_Program_Verify_LDROM_PARM_2'
                                   1258 ;u16IAPStartAddress        Allocated to registers r6 r7 
                                   1259 ;u16Count                  Allocated to registers r6 r7 
                                   1260 ;------------------------------------------------------------
                                   1261 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:151: void Program_Verify_LDROM(unsigned int u16IAPStartAddress, unsigned int u16IAPDataSize)
                                   1262 ;	-----------------------------------------
                                   1263 ;	 function Program_Verify_LDROM
                                   1264 ;	-----------------------------------------
      00020B                       1265 _Program_Verify_LDROM:
      00020B AE 82            [24] 1266 	mov	r6,dpl
      00020D AF 83            [24] 1267 	mov	r7,dph
                                   1268 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:155: set_CHPCON_IAPEN;
      00020F 75 91 00         [24] 1269 	mov	_SFRS,#0x00
                                   1270 ;	assignBit
      000212 A2 AF            [12] 1271 	mov	c,_EA
      000214 92*00            [24] 1272 	mov	_BIT_TMP,c
                                   1273 ;	assignBit
      000216 C2 AF            [12] 1274 	clr	_EA
      000218 75 C7 AA         [24] 1275 	mov	_TA,#0xaa
      00021B 75 C7 55         [24] 1276 	mov	_TA,#0x55
      00021E 43 9F 01         [24] 1277 	orl	_CHPCON,#0x01
                                   1278 ;	assignBit
      000221 A2*00            [12] 1279 	mov	c,_BIT_TMP
      000223 92 AF            [24] 1280 	mov	_EA,c
                                   1281 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:156: IAPAL = LOBYTE(u16IAPStartAddress);
      000225 8E A6            [24] 1282 	mov	_IAPAL,r6
                                   1283 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:157: IAPAH = HIBYTE(u16IAPStartAddress);
      000227 8F A7            [24] 1284 	mov	_IAPAH,r7
                                   1285 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:158: IAPCN = BYTE_READ_LDROM;
      000229 75 AF 40         [24] 1286 	mov	_IAPCN,#0x40
                                   1287 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:160: for (u16Count = 0; u16Count < u16IAPDataSize; u16Count++)
      00022C 7E 00            [12] 1288 	mov	r6,#0x00
      00022E 7F 00            [12] 1289 	mov	r7,#0x00
      000230                       1290 00107$:
      000230 C3               [12] 1291 	clr	c
      000231 EE               [12] 1292 	mov	a,r6
      000232 95*06            [12] 1293 	subb	a,_Program_Verify_LDROM_PARM_2
      000234 EF               [12] 1294 	mov	a,r7
      000235 95*07            [12] 1295 	subb	a,(_Program_Verify_LDROM_PARM_2 + 1)
      000237 50 3F            [24] 1296 	jnc	00105$
                                   1297 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:162: IAPFD = 0x00;
      000239 75 AE 00         [24] 1298 	mov	_IAPFD,#0x00
                                   1299 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:163: Trigger_IAP();
      00023C C0 07            [24] 1300 	push	ar7
      00023E C0 06            [24] 1301 	push	ar6
      000240 12r00r06         [24] 1302 	lcall	_Trigger_IAP
      000243 D0 06            [24] 1303 	pop	ar6
      000245 D0 07            [24] 1304 	pop	ar7
                                   1305 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:165: if (IAPFD != IAPDataBuf[u16Count])
      000247 EE               [12] 1306 	mov	a,r6
      000248 24r1C            [12] 1307 	add	a,#_IAPDataBuf
      00024A F5 82            [12] 1308 	mov	dpl,a
      00024C EF               [12] 1309 	mov	a,r7
      00024D 34s00            [12] 1310 	addc	a,#(_IAPDataBuf >> 8)
      00024F F5 83            [12] 1311 	mov	dph,a
      000251 E0               [24] 1312 	movx	a,@dptr
      000252 FD               [12] 1313 	mov	r5,a
      000253 B5 AE 02         [24] 1314 	cjne	a,_IAPFD,00129$
      000256 80 0B            [24] 1315 	sjmp	00102$
      000258                       1316 00129$:
                                   1317 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:166: IAP_ERROR();
      000258 C0 07            [24] 1318 	push	ar7
      00025A C0 06            [24] 1319 	push	ar6
      00025C 12r00r00         [24] 1320 	lcall	_IAP_ERROR
      00025F D0 06            [24] 1321 	pop	ar6
      000261 D0 07            [24] 1322 	pop	ar7
      000263                       1323 00102$:
                                   1324 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:168: IAPAL++;
      000263 E5 A6            [12] 1325 	mov	a,_IAPAL
      000265 04               [12] 1326 	inc	a
      000266 F5 A6            [12] 1327 	mov	_IAPAL,a
                                   1328 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:170: if (IAPAL == 0)
      000268 E5 A6            [12] 1329 	mov	a,_IAPAL
      00026A 70 05            [24] 1330 	jnz	00108$
                                   1331 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:172: IAPAH++;
      00026C E5 A7            [12] 1332 	mov	a,_IAPAH
      00026E 04               [12] 1333 	inc	a
      00026F F5 A7            [12] 1334 	mov	_IAPAH,a
      000271                       1335 00108$:
                                   1336 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:160: for (u16Count = 0; u16Count < u16IAPDataSize; u16Count++)
      000271 0E               [12] 1337 	inc	r6
      000272 BE 00 BB         [24] 1338 	cjne	r6,#0x00,00107$
      000275 0F               [12] 1339 	inc	r7
      000276 80 B8            [24] 1340 	sjmp	00107$
      000278                       1341 00105$:
                                   1342 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:176: clr_CHPCON_IAPEN;
      000278 75 91 00         [24] 1343 	mov	_SFRS,#0x00
                                   1344 ;	assignBit
      00027B A2 AF            [12] 1345 	mov	c,_EA
      00027D 92*00            [24] 1346 	mov	_BIT_TMP,c
                                   1347 ;	assignBit
      00027F C2 AF            [12] 1348 	clr	_EA
      000281 75 C7 AA         [24] 1349 	mov	_TA,#0xaa
      000284 75 C7 55         [24] 1350 	mov	_TA,#0x55
      000287 53 9F FE         [24] 1351 	anl	_CHPCON,#0xfe
                                   1352 ;	assignBit
      00028A A2*00            [12] 1353 	mov	c,_BIT_TMP
      00028C 92 AF            [24] 1354 	mov	_EA,c
                                   1355 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:177: }
      00028E 22               [24] 1356 	ret
                                   1357 ;------------------------------------------------------------
                                   1358 ;Allocation info for local variables in function 'Erase_APROM'
                                   1359 ;------------------------------------------------------------
                                   1360 ;u16IAPDataSize            Allocated with name '_Erase_APROM_PARM_2'
                                   1361 ;u16IAPStartAddress        Allocated to registers r6 r7 
                                   1362 ;u16Count                  Allocated to registers r2 r3 
                                   1363 ;------------------------------------------------------------
                                   1364 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:187: void Erase_APROM(unsigned int u16IAPStartAddress, unsigned int u16IAPDataSize)
                                   1365 ;	-----------------------------------------
                                   1366 ;	 function Erase_APROM
                                   1367 ;	-----------------------------------------
      00028F                       1368 _Erase_APROM:
      00028F AE 82            [24] 1369 	mov	r6,dpl
      000291 AF 83            [24] 1370 	mov	r7,dph
                                   1371 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:191: set_CHPCON_IAPEN;                    // Enable IAP function
      000293 75 91 00         [24] 1372 	mov	_SFRS,#0x00
                                   1373 ;	assignBit
      000296 A2 AF            [12] 1374 	mov	c,_EA
      000298 92*00            [24] 1375 	mov	_BIT_TMP,c
                                   1376 ;	assignBit
      00029A C2 AF            [12] 1377 	clr	_EA
      00029C 75 C7 AA         [24] 1378 	mov	_TA,#0xaa
      00029F 75 C7 55         [24] 1379 	mov	_TA,#0x55
      0002A2 43 9F 01         [24] 1380 	orl	_CHPCON,#0x01
                                   1381 ;	assignBit
      0002A5 A2*00            [12] 1382 	mov	c,_BIT_TMP
      0002A7 92 AF            [24] 1383 	mov	_EA,c
                                   1384 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:192: set_IAPUEN_APUEN;                    // APROM modify Enable
                                   1385 ;	assignBit
      0002A9 A2 AF            [12] 1386 	mov	c,_EA
      0002AB 92*00            [24] 1387 	mov	_BIT_TMP,c
                                   1388 ;	assignBit
      0002AD C2 AF            [12] 1389 	clr	_EA
      0002AF 75 C7 AA         [24] 1390 	mov	_TA,#0xaa
      0002B2 75 C7 55         [24] 1391 	mov	_TA,#0x55
      0002B5 43 A5 01         [24] 1392 	orl	_IAPUEN,#0x01
                                   1393 ;	assignBit
      0002B8 A2*00            [12] 1394 	mov	c,_BIT_TMP
      0002BA 92 AF            [24] 1395 	mov	_EA,c
                                   1396 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:193: IAPFD = 0xFF;                        // IMPORTANT !! To erase function must setting IAPFD = 0xFF
      0002BC 75 AE FF         [24] 1397 	mov	_IAPFD,#0xff
                                   1398 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:194: IAPCN = PAGE_ERASE_APROM;
      0002BF 75 AF 22         [24] 1399 	mov	_IAPCN,#0x22
                                   1400 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:196: for (u16Count = 0x0000; u16Count < u16IAPDataSize / PAGE_SIZE; u16Count++)   // Loop page erase APROM special define address area.
      0002C2 AC*08            [24] 1401 	mov	r4,_Erase_APROM_PARM_2
      0002C4 E5*09            [12] 1402 	mov	a,(_Erase_APROM_PARM_2 + 1)
      0002C6 A2 E7            [12] 1403 	mov	c,acc.7
      0002C8 CC               [12] 1404 	xch	a,r4
      0002C9 33               [12] 1405 	rlc	a
      0002CA CC               [12] 1406 	xch	a,r4
      0002CB 33               [12] 1407 	rlc	a
      0002CC CC               [12] 1408 	xch	a,r4
      0002CD 54 01            [12] 1409 	anl	a,#0x01
      0002CF FD               [12] 1410 	mov	r5,a
      0002D0 7A 00            [12] 1411 	mov	r2,#0x00
      0002D2 7B 00            [12] 1412 	mov	r3,#0x00
      0002D4                       1413 00103$:
      0002D4 C3               [12] 1414 	clr	c
      0002D5 EA               [12] 1415 	mov	a,r2
      0002D6 9C               [12] 1416 	subb	a,r4
      0002D7 EB               [12] 1417 	mov	a,r3
      0002D8 9D               [12] 1418 	subb	a,r5
      0002D9 50 45            [24] 1419 	jnc	00101$
                                   1420 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:198: IAPAL = LOBYTE(u16Count * PAGE_SIZE + u16IAPStartAddress);
      0002DB 8A 01            [24] 1421 	mov	ar1,r2
      0002DD E9               [12] 1422 	mov	a,r1
      0002DE 75 F0 80         [24] 1423 	mov	b,#0x80
      0002E1 A4               [48] 1424 	mul	ab
      0002E2 F9               [12] 1425 	mov	r1,a
      0002E3 8E 00            [24] 1426 	mov	ar0,r6
      0002E5 E8               [12] 1427 	mov	a,r0
      0002E6 29               [12] 1428 	add	a,r1
      0002E7 F9               [12] 1429 	mov	r1,a
      0002E8 89 A6            [24] 1430 	mov	_IAPAL,r1
                                   1431 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:199: IAPAH = HIBYTE(u16Count * PAGE_SIZE + u16IAPStartAddress);
      0002EA 8A 00            [24] 1432 	mov	ar0,r2
      0002EC EB               [12] 1433 	mov	a,r3
      0002ED 54 01            [12] 1434 	anl	a,#0x01
      0002EF A2 E0            [12] 1435 	mov	c,acc.0
      0002F1 C8               [12] 1436 	xch	a,r0
      0002F2 13               [12] 1437 	rrc	a
      0002F3 C8               [12] 1438 	xch	a,r0
      0002F4 13               [12] 1439 	rrc	a
      0002F5 C8               [12] 1440 	xch	a,r0
      0002F6 F9               [12] 1441 	mov	r1,a
      0002F7 EE               [12] 1442 	mov	a,r6
      0002F8 28               [12] 1443 	add	a,r0
      0002F9 EF               [12] 1444 	mov	a,r7
      0002FA 39               [12] 1445 	addc	a,r1
      0002FB F9               [12] 1446 	mov	r1,a
      0002FC 89 A7            [24] 1447 	mov	_IAPAH,r1
                                   1448 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:200: Trigger_IAP();
      0002FE C0 07            [24] 1449 	push	ar7
      000300 C0 06            [24] 1450 	push	ar6
      000302 C0 05            [24] 1451 	push	ar5
      000304 C0 04            [24] 1452 	push	ar4
      000306 C0 03            [24] 1453 	push	ar3
      000308 C0 02            [24] 1454 	push	ar2
      00030A 12r00r06         [24] 1455 	lcall	_Trigger_IAP
      00030D D0 02            [24] 1456 	pop	ar2
      00030F D0 03            [24] 1457 	pop	ar3
      000311 D0 04            [24] 1458 	pop	ar4
      000313 D0 05            [24] 1459 	pop	ar5
      000315 D0 06            [24] 1460 	pop	ar6
      000317 D0 07            [24] 1461 	pop	ar7
                                   1462 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:196: for (u16Count = 0x0000; u16Count < u16IAPDataSize / PAGE_SIZE; u16Count++)   // Loop page erase APROM special define address area.
      000319 0A               [12] 1463 	inc	r2
      00031A BA 00 B7         [24] 1464 	cjne	r2,#0x00,00103$
      00031D 0B               [12] 1465 	inc	r3
      00031E 80 B4            [24] 1466 	sjmp	00103$
      000320                       1467 00101$:
                                   1468 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:203: clr_IAPUEN_APUEN;                    // Disable APROM modify
                                   1469 ;	assignBit
      000320 A2 AF            [12] 1470 	mov	c,_EA
      000322 92*00            [24] 1471 	mov	_BIT_TMP,c
                                   1472 ;	assignBit
      000324 C2 AF            [12] 1473 	clr	_EA
      000326 75 C7 AA         [24] 1474 	mov	_TA,#0xaa
      000329 75 C7 55         [24] 1475 	mov	_TA,#0x55
      00032C 53 A5 FE         [24] 1476 	anl	_IAPUEN,#0xfe
                                   1477 ;	assignBit
      00032F A2*00            [12] 1478 	mov	c,_BIT_TMP
      000331 92 AF            [24] 1479 	mov	_EA,c
                                   1480 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:204: clr_CHPCON_IAPEN;                    // Disable IAP
      000333 75 91 00         [24] 1481 	mov	_SFRS,#0x00
                                   1482 ;	assignBit
      000336 A2 AF            [12] 1483 	mov	c,_EA
      000338 92*00            [24] 1484 	mov	_BIT_TMP,c
                                   1485 ;	assignBit
      00033A C2 AF            [12] 1486 	clr	_EA
      00033C 75 C7 AA         [24] 1487 	mov	_TA,#0xaa
      00033F 75 C7 55         [24] 1488 	mov	_TA,#0x55
      000342 53 9F FE         [24] 1489 	anl	_CHPCON,#0xfe
                                   1490 ;	assignBit
      000345 A2*00            [12] 1491 	mov	c,_BIT_TMP
      000347 92 AF            [24] 1492 	mov	_EA,c
                                   1493 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:205: }
      000349 22               [24] 1494 	ret
                                   1495 ;------------------------------------------------------------
                                   1496 ;Allocation info for local variables in function 'Erase_Verify_APROM'
                                   1497 ;------------------------------------------------------------
                                   1498 ;u16IAPDataSize            Allocated with name '_Erase_Verify_APROM_PARM_2'
                                   1499 ;u16IAPStartAddress        Allocated to registers r6 r7 
                                   1500 ;u16Count                  Allocated to registers r6 r7 
                                   1501 ;------------------------------------------------------------
                                   1502 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:215: void Erase_Verify_APROM(unsigned int u16IAPStartAddress, unsigned int u16IAPDataSize)
                                   1503 ;	-----------------------------------------
                                   1504 ;	 function Erase_Verify_APROM
                                   1505 ;	-----------------------------------------
      00034A                       1506 _Erase_Verify_APROM:
      00034A AE 82            [24] 1507 	mov	r6,dpl
      00034C AF 83            [24] 1508 	mov	r7,dph
                                   1509 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:219: set_CHPCON_IAPEN;
      00034E 75 91 00         [24] 1510 	mov	_SFRS,#0x00
                                   1511 ;	assignBit
      000351 A2 AF            [12] 1512 	mov	c,_EA
      000353 92*00            [24] 1513 	mov	_BIT_TMP,c
                                   1514 ;	assignBit
      000355 C2 AF            [12] 1515 	clr	_EA
      000357 75 C7 AA         [24] 1516 	mov	_TA,#0xaa
      00035A 75 C7 55         [24] 1517 	mov	_TA,#0x55
      00035D 43 9F 01         [24] 1518 	orl	_CHPCON,#0x01
                                   1519 ;	assignBit
      000360 A2*00            [12] 1520 	mov	c,_BIT_TMP
      000362 92 AF            [24] 1521 	mov	_EA,c
                                   1522 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:220: IAPAL = LOBYTE(u16IAPStartAddress);
      000364 8E A6            [24] 1523 	mov	_IAPAL,r6
                                   1524 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:221: IAPAH = HIBYTE(u16IAPStartAddress);
      000366 8F A7            [24] 1525 	mov	_IAPAH,r7
                                   1526 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:222: IAPCN = BYTE_READ_APROM;
      000368 75 AF 00         [24] 1527 	mov	_IAPCN,#0x00
                                   1528 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:224: for (u16Count = 0; u16Count < u16IAPDataSize; u16Count++)
      00036B 7E 00            [12] 1529 	mov	r6,#0x00
      00036D 7F 00            [12] 1530 	mov	r7,#0x00
      00036F                       1531 00107$:
      00036F C3               [12] 1532 	clr	c
      000370 EE               [12] 1533 	mov	a,r6
      000371 95*0A            [12] 1534 	subb	a,_Erase_Verify_APROM_PARM_2
      000373 EF               [12] 1535 	mov	a,r7
      000374 95*0B            [12] 1536 	subb	a,(_Erase_Verify_APROM_PARM_2 + 1)
      000376 50 35            [24] 1537 	jnc	00105$
                                   1538 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:226: IAPFD = 0x00;
      000378 75 AE 00         [24] 1539 	mov	_IAPFD,#0x00
                                   1540 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:227: Trigger_IAP();
      00037B C0 07            [24] 1541 	push	ar7
      00037D C0 06            [24] 1542 	push	ar6
      00037F 12r00r06         [24] 1543 	lcall	_Trigger_IAP
      000382 D0 06            [24] 1544 	pop	ar6
      000384 D0 07            [24] 1545 	pop	ar7
                                   1546 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:229: if (IAPFD != 0xFF)
      000386 74 FF            [12] 1547 	mov	a,#0xff
      000388 B5 AE 02         [24] 1548 	cjne	a,_IAPFD,00129$
      00038B 80 0B            [24] 1549 	sjmp	00102$
      00038D                       1550 00129$:
                                   1551 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:230: IAP_ERROR();
      00038D C0 07            [24] 1552 	push	ar7
      00038F C0 06            [24] 1553 	push	ar6
      000391 12r00r00         [24] 1554 	lcall	_IAP_ERROR
      000394 D0 06            [24] 1555 	pop	ar6
      000396 D0 07            [24] 1556 	pop	ar7
      000398                       1557 00102$:
                                   1558 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:232: IAPAL++;
      000398 E5 A6            [12] 1559 	mov	a,_IAPAL
      00039A 04               [12] 1560 	inc	a
      00039B F5 A6            [12] 1561 	mov	_IAPAL,a
                                   1562 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:234: if (IAPAL == 0x00)
      00039D E5 A6            [12] 1563 	mov	a,_IAPAL
      00039F 70 05            [24] 1564 	jnz	00108$
                                   1565 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:235: IAPAH++;
      0003A1 E5 A7            [12] 1566 	mov	a,_IAPAH
      0003A3 04               [12] 1567 	inc	a
      0003A4 F5 A7            [12] 1568 	mov	_IAPAH,a
      0003A6                       1569 00108$:
                                   1570 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:224: for (u16Count = 0; u16Count < u16IAPDataSize; u16Count++)
      0003A6 0E               [12] 1571 	inc	r6
      0003A7 BE 00 C5         [24] 1572 	cjne	r6,#0x00,00107$
      0003AA 0F               [12] 1573 	inc	r7
      0003AB 80 C2            [24] 1574 	sjmp	00107$
      0003AD                       1575 00105$:
                                   1576 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:238: clr_CHPCON_IAPEN;
      0003AD 75 91 00         [24] 1577 	mov	_SFRS,#0x00
                                   1578 ;	assignBit
      0003B0 A2 AF            [12] 1579 	mov	c,_EA
      0003B2 92*00            [24] 1580 	mov	_BIT_TMP,c
                                   1581 ;	assignBit
      0003B4 C2 AF            [12] 1582 	clr	_EA
      0003B6 75 C7 AA         [24] 1583 	mov	_TA,#0xaa
      0003B9 75 C7 55         [24] 1584 	mov	_TA,#0x55
      0003BC 53 9F FE         [24] 1585 	anl	_CHPCON,#0xfe
                                   1586 ;	assignBit
      0003BF A2*00            [12] 1587 	mov	c,_BIT_TMP
      0003C1 92 AF            [24] 1588 	mov	_EA,c
                                   1589 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:239: }
      0003C3 22               [24] 1590 	ret
                                   1591 ;------------------------------------------------------------
                                   1592 ;Allocation info for local variables in function 'Program_APROM'
                                   1593 ;------------------------------------------------------------
                                   1594 ;u16IAPDataSize            Allocated with name '_Program_APROM_PARM_2'
                                   1595 ;u16IAPStartAddress        Allocated to registers r6 r7 
                                   1596 ;u16Count                  Allocated to registers r6 r7 
                                   1597 ;------------------------------------------------------------
                                   1598 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:249: void Program_APROM(unsigned int u16IAPStartAddress, unsigned int u16IAPDataSize)
                                   1599 ;	-----------------------------------------
                                   1600 ;	 function Program_APROM
                                   1601 ;	-----------------------------------------
      0003C4                       1602 _Program_APROM:
      0003C4 AE 82            [24] 1603 	mov	r6,dpl
      0003C6 AF 83            [24] 1604 	mov	r7,dph
                                   1605 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:253: set_CHPCON_IAPEN;
      0003C8 75 91 00         [24] 1606 	mov	_SFRS,#0x00
                                   1607 ;	assignBit
      0003CB A2 AF            [12] 1608 	mov	c,_EA
      0003CD 92*00            [24] 1609 	mov	_BIT_TMP,c
                                   1610 ;	assignBit
      0003CF C2 AF            [12] 1611 	clr	_EA
      0003D1 75 C7 AA         [24] 1612 	mov	_TA,#0xaa
      0003D4 75 C7 55         [24] 1613 	mov	_TA,#0x55
      0003D7 43 9F 01         [24] 1614 	orl	_CHPCON,#0x01
                                   1615 ;	assignBit
      0003DA A2*00            [12] 1616 	mov	c,_BIT_TMP
      0003DC 92 AF            [24] 1617 	mov	_EA,c
                                   1618 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:254: set_IAPUEN_APUEN;
                                   1619 ;	assignBit
      0003DE A2 AF            [12] 1620 	mov	c,_EA
      0003E0 92*00            [24] 1621 	mov	_BIT_TMP,c
                                   1622 ;	assignBit
      0003E2 C2 AF            [12] 1623 	clr	_EA
      0003E4 75 C7 AA         [24] 1624 	mov	_TA,#0xaa
      0003E7 75 C7 55         [24] 1625 	mov	_TA,#0x55
      0003EA 43 A5 01         [24] 1626 	orl	_IAPUEN,#0x01
                                   1627 ;	assignBit
      0003ED A2*00            [12] 1628 	mov	c,_BIT_TMP
      0003EF 92 AF            [24] 1629 	mov	_EA,c
                                   1630 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:255: IAPAL = LOBYTE(u16IAPStartAddress);
      0003F1 8E A6            [24] 1631 	mov	_IAPAL,r6
                                   1632 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:256: IAPAH = HIBYTE(u16IAPStartAddress);
      0003F3 8F A7            [24] 1633 	mov	_IAPAH,r7
                                   1634 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:257: IAPCN = BYTE_PROGRAM_APROM;
      0003F5 75 AF 21         [24] 1635 	mov	_IAPCN,#0x21
                                   1636 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:259: for (u16Count = 0; u16Count < u16IAPDataSize; u16Count++)
      0003F8 7E 00            [12] 1637 	mov	r6,#0x00
      0003FA 7F 00            [12] 1638 	mov	r7,#0x00
      0003FC                       1639 00105$:
      0003FC C3               [12] 1640 	clr	c
      0003FD EE               [12] 1641 	mov	a,r6
      0003FE 95*0C            [12] 1642 	subb	a,_Program_APROM_PARM_2
      000400 EF               [12] 1643 	mov	a,r7
      000401 95*0D            [12] 1644 	subb	a,(_Program_APROM_PARM_2 + 1)
      000403 50 2D            [24] 1645 	jnc	00103$
                                   1646 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:261: IAPFD = IAPDataBuf[u16Count];
      000405 EE               [12] 1647 	mov	a,r6
      000406 24r1C            [12] 1648 	add	a,#_IAPDataBuf
      000408 F5 82            [12] 1649 	mov	dpl,a
      00040A EF               [12] 1650 	mov	a,r7
      00040B 34s00            [12] 1651 	addc	a,#(_IAPDataBuf >> 8)
      00040D F5 83            [12] 1652 	mov	dph,a
      00040F E0               [24] 1653 	movx	a,@dptr
      000410 F5 AE            [12] 1654 	mov	_IAPFD,a
                                   1655 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:262: Trigger_IAP();
      000412 C0 07            [24] 1656 	push	ar7
      000414 C0 06            [24] 1657 	push	ar6
      000416 12r00r06         [24] 1658 	lcall	_Trigger_IAP
      000419 D0 06            [24] 1659 	pop	ar6
      00041B D0 07            [24] 1660 	pop	ar7
                                   1661 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:263: IAPAL++;
      00041D E5 A6            [12] 1662 	mov	a,_IAPAL
      00041F 04               [12] 1663 	inc	a
      000420 F5 A6            [12] 1664 	mov	_IAPAL,a
                                   1665 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:265: if (IAPAL == 0)
      000422 E5 A6            [12] 1666 	mov	a,_IAPAL
      000424 70 05            [24] 1667 	jnz	00106$
                                   1668 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:267: IAPAH++;
      000426 E5 A7            [12] 1669 	mov	a,_IAPAH
      000428 04               [12] 1670 	inc	a
      000429 F5 A7            [12] 1671 	mov	_IAPAH,a
      00042B                       1672 00106$:
                                   1673 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:259: for (u16Count = 0; u16Count < u16IAPDataSize; u16Count++)
      00042B 0E               [12] 1674 	inc	r6
      00042C BE 00 CD         [24] 1675 	cjne	r6,#0x00,00105$
      00042F 0F               [12] 1676 	inc	r7
      000430 80 CA            [24] 1677 	sjmp	00105$
      000432                       1678 00103$:
                                   1679 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:271: clr_IAPUEN_APUEN;
                                   1680 ;	assignBit
      000432 A2 AF            [12] 1681 	mov	c,_EA
      000434 92*00            [24] 1682 	mov	_BIT_TMP,c
                                   1683 ;	assignBit
      000436 C2 AF            [12] 1684 	clr	_EA
      000438 75 C7 AA         [24] 1685 	mov	_TA,#0xaa
      00043B 75 C7 55         [24] 1686 	mov	_TA,#0x55
      00043E 53 A5 FE         [24] 1687 	anl	_IAPUEN,#0xfe
                                   1688 ;	assignBit
      000441 A2*00            [12] 1689 	mov	c,_BIT_TMP
      000443 92 AF            [24] 1690 	mov	_EA,c
                                   1691 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:272: clr_CHPCON_IAPEN;
      000445 75 91 00         [24] 1692 	mov	_SFRS,#0x00
                                   1693 ;	assignBit
      000448 A2 AF            [12] 1694 	mov	c,_EA
      00044A 92*00            [24] 1695 	mov	_BIT_TMP,c
                                   1696 ;	assignBit
      00044C C2 AF            [12] 1697 	clr	_EA
      00044E 75 C7 AA         [24] 1698 	mov	_TA,#0xaa
      000451 75 C7 55         [24] 1699 	mov	_TA,#0x55
      000454 53 9F FE         [24] 1700 	anl	_CHPCON,#0xfe
                                   1701 ;	assignBit
      000457 A2*00            [12] 1702 	mov	c,_BIT_TMP
      000459 92 AF            [24] 1703 	mov	_EA,c
                                   1704 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:273: }
      00045B 22               [24] 1705 	ret
                                   1706 ;------------------------------------------------------------
                                   1707 ;Allocation info for local variables in function 'Program_Verify_APROM'
                                   1708 ;------------------------------------------------------------
                                   1709 ;u16IAPDataSize            Allocated with name '_Program_Verify_APROM_PARM_2'
                                   1710 ;u16IAPStartAddress        Allocated to registers r6 r7 
                                   1711 ;u16Count                  Allocated to registers r6 r7 
                                   1712 ;------------------------------------------------------------
                                   1713 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:284: void Program_Verify_APROM(unsigned int u16IAPStartAddress, unsigned int u16IAPDataSize)
                                   1714 ;	-----------------------------------------
                                   1715 ;	 function Program_Verify_APROM
                                   1716 ;	-----------------------------------------
      00045C                       1717 _Program_Verify_APROM:
      00045C AE 82            [24] 1718 	mov	r6,dpl
      00045E AF 83            [24] 1719 	mov	r7,dph
                                   1720 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:288: set_CHPCON_IAPEN;
      000460 75 91 00         [24] 1721 	mov	_SFRS,#0x00
                                   1722 ;	assignBit
      000463 A2 AF            [12] 1723 	mov	c,_EA
      000465 92*00            [24] 1724 	mov	_BIT_TMP,c
                                   1725 ;	assignBit
      000467 C2 AF            [12] 1726 	clr	_EA
      000469 75 C7 AA         [24] 1727 	mov	_TA,#0xaa
      00046C 75 C7 55         [24] 1728 	mov	_TA,#0x55
      00046F 43 9F 01         [24] 1729 	orl	_CHPCON,#0x01
                                   1730 ;	assignBit
      000472 A2*00            [12] 1731 	mov	c,_BIT_TMP
      000474 92 AF            [24] 1732 	mov	_EA,c
                                   1733 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:289: IAPAL = LOBYTE(u16IAPStartAddress);
      000476 8E A6            [24] 1734 	mov	_IAPAL,r6
                                   1735 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:290: IAPAH = HIBYTE(u16IAPStartAddress);
      000478 8F A7            [24] 1736 	mov	_IAPAH,r7
                                   1737 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:291: IAPCN = BYTE_READ_APROM;
      00047A 75 AF 00         [24] 1738 	mov	_IAPCN,#0x00
                                   1739 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:293: for (u16Count = 0; u16Count < u16IAPDataSize; u16Count++)
      00047D 7E 00            [12] 1740 	mov	r6,#0x00
      00047F 7F 00            [12] 1741 	mov	r7,#0x00
      000481                       1742 00107$:
      000481 C3               [12] 1743 	clr	c
      000482 EE               [12] 1744 	mov	a,r6
      000483 95*0E            [12] 1745 	subb	a,_Program_Verify_APROM_PARM_2
      000485 EF               [12] 1746 	mov	a,r7
      000486 95*0F            [12] 1747 	subb	a,(_Program_Verify_APROM_PARM_2 + 1)
      000488 50 3F            [24] 1748 	jnc	00105$
                                   1749 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:295: IAPFD = 0x00;
      00048A 75 AE 00         [24] 1750 	mov	_IAPFD,#0x00
                                   1751 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:296: Trigger_IAP();
      00048D C0 07            [24] 1752 	push	ar7
      00048F C0 06            [24] 1753 	push	ar6
      000491 12r00r06         [24] 1754 	lcall	_Trigger_IAP
      000494 D0 06            [24] 1755 	pop	ar6
      000496 D0 07            [24] 1756 	pop	ar7
                                   1757 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:298: if (IAPFD != IAPDataBuf[u16Count])
      000498 EE               [12] 1758 	mov	a,r6
      000499 24r1C            [12] 1759 	add	a,#_IAPDataBuf
      00049B F5 82            [12] 1760 	mov	dpl,a
      00049D EF               [12] 1761 	mov	a,r7
      00049E 34s00            [12] 1762 	addc	a,#(_IAPDataBuf >> 8)
      0004A0 F5 83            [12] 1763 	mov	dph,a
      0004A2 E0               [24] 1764 	movx	a,@dptr
      0004A3 FD               [12] 1765 	mov	r5,a
      0004A4 B5 AE 02         [24] 1766 	cjne	a,_IAPFD,00129$
      0004A7 80 0B            [24] 1767 	sjmp	00102$
      0004A9                       1768 00129$:
                                   1769 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:299: IAP_ERROR();
      0004A9 C0 07            [24] 1770 	push	ar7
      0004AB C0 06            [24] 1771 	push	ar6
      0004AD 12r00r00         [24] 1772 	lcall	_IAP_ERROR
      0004B0 D0 06            [24] 1773 	pop	ar6
      0004B2 D0 07            [24] 1774 	pop	ar7
      0004B4                       1775 00102$:
                                   1776 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:301: IAPAL++;
      0004B4 E5 A6            [12] 1777 	mov	a,_IAPAL
      0004B6 04               [12] 1778 	inc	a
      0004B7 F5 A6            [12] 1779 	mov	_IAPAL,a
                                   1780 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:303: if (IAPAL == 0)
      0004B9 E5 A6            [12] 1781 	mov	a,_IAPAL
      0004BB 70 05            [24] 1782 	jnz	00108$
                                   1783 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:305: IAPAH++;
      0004BD E5 A7            [12] 1784 	mov	a,_IAPAH
      0004BF 04               [12] 1785 	inc	a
      0004C0 F5 A7            [12] 1786 	mov	_IAPAH,a
      0004C2                       1787 00108$:
                                   1788 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:293: for (u16Count = 0; u16Count < u16IAPDataSize; u16Count++)
      0004C2 0E               [12] 1789 	inc	r6
      0004C3 BE 00 BB         [24] 1790 	cjne	r6,#0x00,00107$
      0004C6 0F               [12] 1791 	inc	r7
      0004C7 80 B8            [24] 1792 	sjmp	00107$
      0004C9                       1793 00105$:
                                   1794 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:309: clr_CHPCON_IAPEN;
      0004C9 75 91 00         [24] 1795 	mov	_SFRS,#0x00
                                   1796 ;	assignBit
      0004CC A2 AF            [12] 1797 	mov	c,_EA
      0004CE 92*00            [24] 1798 	mov	_BIT_TMP,c
                                   1799 ;	assignBit
      0004D0 C2 AF            [12] 1800 	clr	_EA
      0004D2 75 C7 AA         [24] 1801 	mov	_TA,#0xaa
      0004D5 75 C7 55         [24] 1802 	mov	_TA,#0x55
      0004D8 53 9F FE         [24] 1803 	anl	_CHPCON,#0xfe
                                   1804 ;	assignBit
      0004DB A2*00            [12] 1805 	mov	c,_BIT_TMP
      0004DD 92 AF            [24] 1806 	mov	_EA,c
                                   1807 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:310: }
      0004DF 22               [24] 1808 	ret
                                   1809 ;------------------------------------------------------------
                                   1810 ;Allocation info for local variables in function 'Modify_CONFIG'
                                   1811 ;------------------------------------------------------------
                                   1812 ;u8CF1                     Allocated with name '_Modify_CONFIG_PARM_2'
                                   1813 ;u8CF2                     Allocated with name '_Modify_CONFIG_PARM_3'
                                   1814 ;u8CF3                     Allocated with name '_Modify_CONFIG_PARM_4'
                                   1815 ;u8CF4                     Allocated with name '_Modify_CONFIG_PARM_5'
                                   1816 ;u8CF0                     Allocated to registers r7 
                                   1817 ;u8Count                   Allocated to registers r6 
                                   1818 ;------------------------------------------------------------
                                   1819 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:320: void Modify_CONFIG(unsigned char u8CF0, unsigned char u8CF1, unsigned char u8CF2, unsigned char u8CF3, unsigned char u8CF4)
                                   1820 ;	-----------------------------------------
                                   1821 ;	 function Modify_CONFIG
                                   1822 ;	-----------------------------------------
      0004E0                       1823 _Modify_CONFIG:
      0004E0 AF 82            [24] 1824 	mov	r7,dpl
                                   1825 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:323: BIT_TMP = EA;
      0004E2 A2 AF            [12] 1826 	mov	c,_EA
                                   1827 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:324: EA = 0;
                                   1828 ;	assignBit
      0004E4 C2 AF            [12] 1829 	clr	_EA
                                   1830 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:326: set_CHPCON_IAPEN;                    // Enable IAP function
      0004E6 75 91 00         [24] 1831 	mov	_SFRS,#0x00
                                   1832 ;	assignBit
      0004E9 A2 AF            [12] 1833 	mov	c,_EA
      0004EB 92*00            [24] 1834 	mov	_BIT_TMP,c
                                   1835 ;	assignBit
      0004ED C2 AF            [12] 1836 	clr	_EA
      0004EF 75 C7 AA         [24] 1837 	mov	_TA,#0xaa
      0004F2 75 C7 55         [24] 1838 	mov	_TA,#0x55
      0004F5 43 9F 01         [24] 1839 	orl	_CHPCON,#0x01
                                   1840 ;	assignBit
      0004F8 A2*00            [12] 1841 	mov	c,_BIT_TMP
      0004FA 92 AF            [24] 1842 	mov	_EA,c
                                   1843 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:327: IAPCN = BYTE_READ_CONFIG;
      0004FC 75 AF C0         [24] 1844 	mov	_IAPCN,#0xc0
                                   1845 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:328: IAPAH = 0x00;
      0004FF 75 A7 00         [24] 1846 	mov	_IAPAH,#0x00
                                   1847 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:330: for (u8Count = 0; u8Count < 5; u8Count++)
      000502 7E 00            [12] 1848 	mov	r6,#0x00
      000504                       1849 00115$:
                                   1850 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:332: IAPAL = u8Count;
      000504 8E A6            [24] 1851 	mov	_IAPAL,r6
                                   1852 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:333: Trigger_IAP();
      000506 C0 07            [24] 1853 	push	ar7
      000508 C0 06            [24] 1854 	push	ar6
      00050A 12r00r06         [24] 1855 	lcall	_Trigger_IAP
      00050D D0 06            [24] 1856 	pop	ar6
      00050F D0 07            [24] 1857 	pop	ar7
                                   1858 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:334: IAPCFBuf[u8Count] = IAPFD;
      000511 EE               [12] 1859 	mov	a,r6
      000512 24r9C            [12] 1860 	add	a,#_IAPCFBuf
      000514 F5 82            [12] 1861 	mov	dpl,a
      000516 E4               [12] 1862 	clr	a
      000517 34s00            [12] 1863 	addc	a,#(_IAPCFBuf >> 8)
      000519 F5 83            [12] 1864 	mov	dph,a
      00051B E5 AE            [12] 1865 	mov	a,_IAPFD
      00051D F0               [24] 1866 	movx	@dptr,a
                                   1867 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:330: for (u8Count = 0; u8Count < 5; u8Count++)
      00051E 0E               [12] 1868 	inc	r6
      00051F BE 05 00         [24] 1869 	cjne	r6,#0x05,00151$
      000522                       1870 00151$:
      000522 40 E0            [24] 1871 	jc	00115$
                                   1872 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:338: set_IAPUEN_CFUEN;                    // APROM modify Enable
                                   1873 ;	assignBit
      000524 A2 AF            [12] 1874 	mov	c,_EA
      000526 92*00            [24] 1875 	mov	_BIT_TMP,c
                                   1876 ;	assignBit
      000528 C2 AF            [12] 1877 	clr	_EA
      00052A 75 C7 AA         [24] 1878 	mov	_TA,#0xaa
      00052D 75 C7 55         [24] 1879 	mov	_TA,#0x55
      000530 43 A5 04         [24] 1880 	orl	_IAPUEN,#0x04
                                   1881 ;	assignBit
      000533 A2*00            [12] 1882 	mov	c,_BIT_TMP
      000535 92 AF            [24] 1883 	mov	_EA,c
                                   1884 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:339: IAPFD = 0xFF;                        // IMPORTANT !! To erase function must setting IAPFD = 0xFF
      000537 75 AE FF         [24] 1885 	mov	_IAPFD,#0xff
                                   1886 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:340: IAPCN = PAGE_ERASE_CONFIG;
      00053A 75 AF E2         [24] 1887 	mov	_IAPCN,#0xe2
                                   1888 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:341: IAPAL = 0x00;
      00053D 75 A6 00         [24] 1889 	mov	_IAPAL,#0x00
                                   1890 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:342: Trigger_IAP();
      000540 C0 07            [24] 1891 	push	ar7
      000542 12r00r06         [24] 1892 	lcall	_Trigger_IAP
      000545 D0 07            [24] 1893 	pop	ar7
                                   1894 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:344: IAPCN = BYTE_PROGRAM_CONFIG;
      000547 75 AF E1         [24] 1895 	mov	_IAPCN,#0xe1
                                   1896 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:345: IAPFD = u8CF0;
      00054A 8F AE            [24] 1897 	mov	_IAPFD,r7
                                   1898 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:346: Trigger_IAP();
      00054C C0 07            [24] 1899 	push	ar7
      00054E 12r00r06         [24] 1900 	lcall	_Trigger_IAP
                                   1901 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:347: IAPAL++;
      000551 E5 A6            [12] 1902 	mov	a,_IAPAL
      000553 04               [12] 1903 	inc	a
      000554 F5 A6            [12] 1904 	mov	_IAPAL,a
                                   1905 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:348: IAPFD = u8CF1;
      000556 85*10 AE         [24] 1906 	mov	_IAPFD,_Modify_CONFIG_PARM_2
                                   1907 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:349: Trigger_IAP();
      000559 12r00r06         [24] 1908 	lcall	_Trigger_IAP
                                   1909 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:350: IAPAL++;
      00055C E5 A6            [12] 1910 	mov	a,_IAPAL
      00055E 04               [12] 1911 	inc	a
      00055F F5 A6            [12] 1912 	mov	_IAPAL,a
                                   1913 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:351: IAPFD = u8CF2;
      000561 85*11 AE         [24] 1914 	mov	_IAPFD,_Modify_CONFIG_PARM_3
                                   1915 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:352: Trigger_IAP();
      000564 12r00r06         [24] 1916 	lcall	_Trigger_IAP
                                   1917 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:353: IAPAL++;
      000567 E5 A6            [12] 1918 	mov	a,_IAPAL
      000569 04               [12] 1919 	inc	a
      00056A F5 A6            [12] 1920 	mov	_IAPAL,a
                                   1921 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:354: IAPFD = u8CF3;
      00056C 85*12 AE         [24] 1922 	mov	_IAPFD,_Modify_CONFIG_PARM_4
                                   1923 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:355: Trigger_IAP();
      00056F 12r00r06         [24] 1924 	lcall	_Trigger_IAP
                                   1925 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:356: IAPAL++;
      000572 E5 A6            [12] 1926 	mov	a,_IAPAL
      000574 04               [12] 1927 	inc	a
      000575 F5 A6            [12] 1928 	mov	_IAPAL,a
                                   1929 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:357: IAPFD = u8CF4;
      000577 85*13 AE         [24] 1930 	mov	_IAPFD,_Modify_CONFIG_PARM_5
                                   1931 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:358: Trigger_IAP();
      00057A 12r00r06         [24] 1932 	lcall	_Trigger_IAP
                                   1933 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:359: clr_IAPUEN_CFUEN;
                                   1934 ;	assignBit
      00057D A2 AF            [12] 1935 	mov	c,_EA
      00057F 92*00            [24] 1936 	mov	_BIT_TMP,c
                                   1937 ;	assignBit
      000581 C2 AF            [12] 1938 	clr	_EA
      000583 75 C7 AA         [24] 1939 	mov	_TA,#0xaa
      000586 75 C7 55         [24] 1940 	mov	_TA,#0x55
      000589 53 A5 FB         [24] 1941 	anl	_IAPUEN,#0xfb
                                   1942 ;	assignBit
      00058C A2*00            [12] 1943 	mov	c,_BIT_TMP
      00058E 92 AF            [24] 1944 	mov	_EA,c
                                   1945 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:361: IAPCN = BYTE_READ_CONFIG;
      000590 75 AF C0         [24] 1946 	mov	_IAPCN,#0xc0
                                   1947 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:362: IAPAL = 0x00;
      000593 75 A6 00         [24] 1948 	mov	_IAPAL,#0x00
                                   1949 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:363: Trigger_IAP();
      000596 12r00r06         [24] 1950 	lcall	_Trigger_IAP
      000599 D0 07            [24] 1951 	pop	ar7
                                   1952 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:365: if (IAPFD != u8CF0)
      00059B EF               [12] 1953 	mov	a,r7
      00059C B5 AE 36         [24] 1954 	cjne	a,_IAPFD,00112$
                                   1955 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:368: IAPAL++;
      00059F E5 A6            [12] 1956 	mov	a,_IAPAL
      0005A1 04               [12] 1957 	inc	a
      0005A2 F5 A6            [12] 1958 	mov	_IAPAL,a
                                   1959 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:369: Trigger_IAP();
      0005A4 12r00r06         [24] 1960 	lcall	_Trigger_IAP
                                   1961 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:371: if (IAPFD != u8CF1)
      0005A7 E5*10            [12] 1962 	mov	a,_Modify_CONFIG_PARM_2
      0005A9 B5 AE 29         [24] 1963 	cjne	a,_IAPFD,00112$
                                   1964 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:374: IAPAL++;
      0005AC E5 A6            [12] 1965 	mov	a,_IAPAL
      0005AE 04               [12] 1966 	inc	a
      0005AF F5 A6            [12] 1967 	mov	_IAPAL,a
                                   1968 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:375: Trigger_IAP();
      0005B1 12r00r06         [24] 1969 	lcall	_Trigger_IAP
                                   1970 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:377: if (IAPFD != u8CF2)
      0005B4 E5*11            [12] 1971 	mov	a,_Modify_CONFIG_PARM_3
      0005B6 B5 AE 1C         [24] 1972 	cjne	a,_IAPFD,00112$
                                   1973 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:380: IAPAL++;
      0005B9 E5 A6            [12] 1974 	mov	a,_IAPAL
      0005BB 04               [12] 1975 	inc	a
      0005BC F5 A6            [12] 1976 	mov	_IAPAL,a
                                   1977 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:381: Trigger_IAP();
      0005BE 12r00r06         [24] 1978 	lcall	_Trigger_IAP
                                   1979 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:383: if (IAPFD != u8CF3)
      0005C1 E5*12            [12] 1980 	mov	a,_Modify_CONFIG_PARM_4
      0005C3 B5 AE 0F         [24] 1981 	cjne	a,_IAPFD,00112$
                                   1982 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:386: IAPAL++;
      0005C6 E5 A6            [12] 1983 	mov	a,_IAPAL
      0005C8 04               [12] 1984 	inc	a
      0005C9 F5 A6            [12] 1985 	mov	_IAPAL,a
                                   1986 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:387: Trigger_IAP();
      0005CB 12r00r06         [24] 1987 	lcall	_Trigger_IAP
                                   1988 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:389: if (IAPFD != u8CF4)
      0005CE E5*13            [12] 1989 	mov	a,_Modify_CONFIG_PARM_5
      0005D0 B5 AE 02         [24] 1990 	cjne	a,_IAPFD,00161$
      0005D3 80 31            [24] 1991 	sjmp	00114$
      0005D5                       1992 00161$:
                                   1993 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:393: MDCFEND:
      0005D5                       1994 00112$:
                                   1995 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:394: set_IAPUEN_CFUEN;                      // APROM modify Enable
                                   1996 ;	assignBit
      0005D5 A2 AF            [12] 1997 	mov	c,_EA
      0005D7 92*00            [24] 1998 	mov	_BIT_TMP,c
                                   1999 ;	assignBit
      0005D9 C2 AF            [12] 2000 	clr	_EA
      0005DB 75 C7 AA         [24] 2001 	mov	_TA,#0xaa
      0005DE 75 C7 55         [24] 2002 	mov	_TA,#0x55
      0005E1 43 A5 04         [24] 2003 	orl	_IAPUEN,#0x04
                                   2004 ;	assignBit
      0005E4 A2*00            [12] 2005 	mov	c,_BIT_TMP
      0005E6 92 AF            [24] 2006 	mov	_EA,c
                                   2007 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:396: for (u8Count = 0; u8Count < 5; u8Count++) // Loop page erase APROM special define address area.
      0005E8 7F 00            [12] 2008 	mov	r7,#0x00
      0005EA                       2009 00117$:
                                   2010 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:398: IAPAL = u8Count;
                                   2011 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:399: IAPFD = IAPCFBuf[u8Count];
      0005EA EF               [12] 2012 	mov	a,r7
      0005EB F5 A6            [12] 2013 	mov	_IAPAL,a
      0005ED 24r9C            [12] 2014 	add	a,#_IAPCFBuf
      0005EF F5 82            [12] 2015 	mov	dpl,a
      0005F1 E4               [12] 2016 	clr	a
      0005F2 34s00            [12] 2017 	addc	a,#(_IAPCFBuf >> 8)
      0005F4 F5 83            [12] 2018 	mov	dph,a
      0005F6 E0               [24] 2019 	movx	a,@dptr
      0005F7 F5 AE            [12] 2020 	mov	_IAPFD,a
                                   2021 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:400: Trigger_IAP();
      0005F9 C0 07            [24] 2022 	push	ar7
      0005FB 12r00r06         [24] 2023 	lcall	_Trigger_IAP
      0005FE D0 07            [24] 2024 	pop	ar7
                                   2025 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:396: for (u8Count = 0; u8Count < 5; u8Count++) // Loop page erase APROM special define address area.
      000600 0F               [12] 2026 	inc	r7
      000601 BF 05 00         [24] 2027 	cjne	r7,#0x05,00162$
      000604                       2028 00162$:
      000604 40 E4            [24] 2029 	jc	00117$
                                   2030 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:403: CFCLOSE:
      000606                       2031 00114$:
                                   2032 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:404: clr_IAPUEN_CFUEN;                    // Disable APROM modify
                                   2033 ;	assignBit
      000606 A2 AF            [12] 2034 	mov	c,_EA
      000608 92*00            [24] 2035 	mov	_BIT_TMP,c
                                   2036 ;	assignBit
      00060A C2 AF            [12] 2037 	clr	_EA
      00060C 75 C7 AA         [24] 2038 	mov	_TA,#0xaa
      00060F 75 C7 55         [24] 2039 	mov	_TA,#0x55
      000612 53 A5 FB         [24] 2040 	anl	_IAPUEN,#0xfb
                                   2041 ;	assignBit
      000615 A2*00            [12] 2042 	mov	c,_BIT_TMP
      000617 92 AF            [24] 2043 	mov	_EA,c
                                   2044 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:405: clr_CHPCON_IAPEN;                    // Disable IAP
      000619 75 91 00         [24] 2045 	mov	_SFRS,#0x00
                                   2046 ;	assignBit
      00061C A2 AF            [12] 2047 	mov	c,_EA
      00061E 92*00            [24] 2048 	mov	_BIT_TMP,c
                                   2049 ;	assignBit
      000620 C2 AF            [12] 2050 	clr	_EA
      000622 75 C7 AA         [24] 2051 	mov	_TA,#0xaa
      000625 75 C7 55         [24] 2052 	mov	_TA,#0x55
      000628 53 9F FE         [24] 2053 	anl	_CHPCON,#0xfe
                                   2054 ;	assignBit
      00062B A2*00            [12] 2055 	mov	c,_BIT_TMP
      00062D 92 AF            [24] 2056 	mov	_EA,c
                                   2057 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:407: EA = BIT_TMP;
                                   2058 ;	assignBit
      00062F A2*00            [12] 2059 	mov	c,_BIT_TMP
      000631 92 AF            [24] 2060 	mov	_EA,c
                                   2061 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:408: }
      000633 22               [24] 2062 	ret
                                   2063 ;------------------------------------------------------------
                                   2064 ;Allocation info for local variables in function 'Read_UID'
                                   2065 ;------------------------------------------------------------
                                   2066 ;u8Count                   Allocated to registers r7 
                                   2067 ;------------------------------------------------------------
                                   2068 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:417: void Read_UID(void)
                                   2069 ;	-----------------------------------------
                                   2070 ;	 function Read_UID
                                   2071 ;	-----------------------------------------
      000634                       2072 _Read_UID:
                                   2073 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:421: set_CHPCON_IAPEN;
      000634 75 91 00         [24] 2074 	mov	_SFRS,#0x00
                                   2075 ;	assignBit
      000637 A2 AF            [12] 2076 	mov	c,_EA
      000639 92*00            [24] 2077 	mov	_BIT_TMP,c
                                   2078 ;	assignBit
      00063B C2 AF            [12] 2079 	clr	_EA
      00063D 75 C7 AA         [24] 2080 	mov	_TA,#0xaa
      000640 75 C7 55         [24] 2081 	mov	_TA,#0x55
      000643 43 9F 01         [24] 2082 	orl	_CHPCON,#0x01
                                   2083 ;	assignBit
      000646 A2*00            [12] 2084 	mov	c,_BIT_TMP
      000648 92 AF            [24] 2085 	mov	_EA,c
                                   2086 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:422: IAPAL = 0x00;
      00064A 75 A6 00         [24] 2087 	mov	_IAPAL,#0x00
                                   2088 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:423: IAPAH = 0x00;
      00064D 75 A7 00         [24] 2089 	mov	_IAPAH,#0x00
                                   2090 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:424: IAPCN = READ_UID;
      000650 75 AF 04         [24] 2091 	mov	_IAPCN,#0x04
                                   2092 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:426: for (u8Count = 0; u8Count < 12; u8Count++)
      000653 7F 00            [12] 2093 	mov	r7,#0x00
      000655                       2094 00102$:
                                   2095 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:428: IAPFD = 0xFF;
      000655 75 AE FF         [24] 2096 	mov	_IAPFD,#0xff
                                   2097 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:429: Trigger_IAP();
      000658 C0 07            [24] 2098 	push	ar7
      00065A 12r00r06         [24] 2099 	lcall	_Trigger_IAP
      00065D D0 07            [24] 2100 	pop	ar7
                                   2101 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:430: UIDBuffer[u8Count] = IAPFD ;
      00065F EF               [12] 2102 	mov	a,r7
      000660 24r04            [12] 2103 	add	a,#_UIDBuffer
      000662 F5 82            [12] 2104 	mov	dpl,a
      000664 E4               [12] 2105 	clr	a
      000665 34s00            [12] 2106 	addc	a,#(_UIDBuffer >> 8)
      000667 F5 83            [12] 2107 	mov	dph,a
      000669 E5 AE            [12] 2108 	mov	a,_IAPFD
      00066B F0               [24] 2109 	movx	@dptr,a
                                   2110 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:431: IAPAL++;
      00066C E5 A6            [12] 2111 	mov	a,_IAPAL
      00066E 04               [12] 2112 	inc	a
      00066F F5 A6            [12] 2113 	mov	_IAPAL,a
                                   2114 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:426: for (u8Count = 0; u8Count < 12; u8Count++)
      000671 0F               [12] 2115 	inc	r7
      000672 BF 0C 00         [24] 2116 	cjne	r7,#0x0c,00115$
      000675                       2117 00115$:
      000675 40 DE            [24] 2118 	jc	00102$
                                   2119 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:434: clr_CHPCON_IAPEN;
      000677 75 91 00         [24] 2120 	mov	_SFRS,#0x00
                                   2121 ;	assignBit
      00067A A2 AF            [12] 2122 	mov	c,_EA
      00067C 92*00            [24] 2123 	mov	_BIT_TMP,c
                                   2124 ;	assignBit
      00067E C2 AF            [12] 2125 	clr	_EA
      000680 75 C7 AA         [24] 2126 	mov	_TA,#0xaa
      000683 75 C7 55         [24] 2127 	mov	_TA,#0x55
      000686 53 9F FE         [24] 2128 	anl	_CHPCON,#0xfe
                                   2129 ;	assignBit
      000689 A2*00            [12] 2130 	mov	c,_BIT_TMP
      00068B 92 AF            [24] 2131 	mov	_EA,c
                                   2132 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:435: }
      00068D 22               [24] 2133 	ret
                                   2134 ;------------------------------------------------------------
                                   2135 ;Allocation info for local variables in function 'Read_UCID'
                                   2136 ;------------------------------------------------------------
                                   2137 ;u8Count                   Allocated to registers r7 
                                   2138 ;------------------------------------------------------------
                                   2139 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:445: void Read_UCID(void)
                                   2140 ;	-----------------------------------------
                                   2141 ;	 function Read_UCID
                                   2142 ;	-----------------------------------------
      00068E                       2143 _Read_UCID:
                                   2144 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:449: set_CHPCON_IAPEN;
      00068E 75 91 00         [24] 2145 	mov	_SFRS,#0x00
                                   2146 ;	assignBit
      000691 A2 AF            [12] 2147 	mov	c,_EA
      000693 92*00            [24] 2148 	mov	_BIT_TMP,c
                                   2149 ;	assignBit
      000695 C2 AF            [12] 2150 	clr	_EA
      000697 75 C7 AA         [24] 2151 	mov	_TA,#0xaa
      00069A 75 C7 55         [24] 2152 	mov	_TA,#0x55
      00069D 43 9F 01         [24] 2153 	orl	_CHPCON,#0x01
                                   2154 ;	assignBit
      0006A0 A2*00            [12] 2155 	mov	c,_BIT_TMP
      0006A2 92 AF            [24] 2156 	mov	_EA,c
                                   2157 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:450: IAPAL = 0x20;
      0006A4 75 A6 20         [24] 2158 	mov	_IAPAL,#0x20
                                   2159 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:451: IAPAH = 0x00;
      0006A7 75 A7 00         [24] 2160 	mov	_IAPAH,#0x00
                                   2161 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:452: IAPCN = READ_UID;
      0006AA 75 AF 04         [24] 2162 	mov	_IAPCN,#0x04
                                   2163 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:454: for (u8Count = 0; u8Count < 12; u8Count++)
      0006AD 7F 00            [12] 2164 	mov	r7,#0x00
      0006AF                       2165 00102$:
                                   2166 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:456: IAPFD = 0xFF;
      0006AF 75 AE FF         [24] 2167 	mov	_IAPFD,#0xff
                                   2168 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:457: Trigger_IAP();
      0006B2 C0 07            [24] 2169 	push	ar7
      0006B4 12r00r06         [24] 2170 	lcall	_Trigger_IAP
      0006B7 D0 07            [24] 2171 	pop	ar7
                                   2172 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:458: UCIDBuffer[u8Count] = IAPFD ;
      0006B9 EF               [12] 2173 	mov	a,r7
      0006BA 24r10            [12] 2174 	add	a,#_UCIDBuffer
      0006BC F5 82            [12] 2175 	mov	dpl,a
      0006BE E4               [12] 2176 	clr	a
      0006BF 34s00            [12] 2177 	addc	a,#(_UCIDBuffer >> 8)
      0006C1 F5 83            [12] 2178 	mov	dph,a
      0006C3 E5 AE            [12] 2179 	mov	a,_IAPFD
      0006C5 F0               [24] 2180 	movx	@dptr,a
                                   2181 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:459: IAPAL++;
      0006C6 E5 A6            [12] 2182 	mov	a,_IAPAL
      0006C8 04               [12] 2183 	inc	a
      0006C9 F5 A6            [12] 2184 	mov	_IAPAL,a
                                   2185 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:454: for (u8Count = 0; u8Count < 12; u8Count++)
      0006CB 0F               [12] 2186 	inc	r7
      0006CC BF 0C 00         [24] 2187 	cjne	r7,#0x0c,00115$
      0006CF                       2188 00115$:
      0006CF 40 DE            [24] 2189 	jc	00102$
                                   2190 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:462: clr_CHPCON_IAPEN;
      0006D1 75 91 00         [24] 2191 	mov	_SFRS,#0x00
                                   2192 ;	assignBit
      0006D4 A2 AF            [12] 2193 	mov	c,_EA
      0006D6 92*00            [24] 2194 	mov	_BIT_TMP,c
                                   2195 ;	assignBit
      0006D8 C2 AF            [12] 2196 	clr	_EA
      0006DA 75 C7 AA         [24] 2197 	mov	_TA,#0xaa
      0006DD 75 C7 55         [24] 2198 	mov	_TA,#0x55
      0006E0 53 9F FE         [24] 2199 	anl	_CHPCON,#0xfe
                                   2200 ;	assignBit
      0006E3 A2*00            [12] 2201 	mov	c,_BIT_TMP
      0006E5 92 AF            [24] 2202 	mov	_EA,c
                                   2203 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:463: }
      0006E7 22               [24] 2204 	ret
                                   2205 ;------------------------------------------------------------
                                   2206 ;Allocation info for local variables in function 'Read_DID'
                                   2207 ;------------------------------------------------------------
                                   2208 ;u8Count                   Allocated to registers r7 
                                   2209 ;------------------------------------------------------------
                                   2210 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:472: void Read_DID(void)
                                   2211 ;	-----------------------------------------
                                   2212 ;	 function Read_DID
                                   2213 ;	-----------------------------------------
      0006E8                       2214 _Read_DID:
                                   2215 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:476: set_CHPCON_IAPEN;
      0006E8 75 91 00         [24] 2216 	mov	_SFRS,#0x00
                                   2217 ;	assignBit
      0006EB A2 AF            [12] 2218 	mov	c,_EA
      0006ED 92*00            [24] 2219 	mov	_BIT_TMP,c
                                   2220 ;	assignBit
      0006EF C2 AF            [12] 2221 	clr	_EA
      0006F1 75 C7 AA         [24] 2222 	mov	_TA,#0xaa
      0006F4 75 C7 55         [24] 2223 	mov	_TA,#0x55
      0006F7 43 9F 01         [24] 2224 	orl	_CHPCON,#0x01
                                   2225 ;	assignBit
      0006FA A2*00            [12] 2226 	mov	c,_BIT_TMP
      0006FC 92 AF            [24] 2227 	mov	_EA,c
                                   2228 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:477: IAPAL = 0x00;
      0006FE 75 A6 00         [24] 2229 	mov	_IAPAL,#0x00
                                   2230 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:478: IAPAH = 0x00;
      000701 75 A7 00         [24] 2231 	mov	_IAPAH,#0x00
                                   2232 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:479: IAPCN = READ_DID;
      000704 75 AF 0C         [24] 2233 	mov	_IAPCN,#0x0c
                                   2234 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:481: for (u8Count = 0; u8Count < 4; u8Count++)
      000707 7F 00            [12] 2235 	mov	r7,#0x00
      000709                       2236 00102$:
                                   2237 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:483: IAPFD = 0x00;
      000709 75 AE 00         [24] 2238 	mov	_IAPFD,#0x00
                                   2239 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:484: Trigger_IAP();
      00070C C0 07            [24] 2240 	push	ar7
      00070E 12r00r06         [24] 2241 	lcall	_Trigger_IAP
      000711 D0 07            [24] 2242 	pop	ar7
                                   2243 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:485: DIDBuffer[u8Count] = IAPFD ;
      000713 EF               [12] 2244 	mov	a,r7
      000714 24r00            [12] 2245 	add	a,#_DIDBuffer
      000716 F5 82            [12] 2246 	mov	dpl,a
      000718 E4               [12] 2247 	clr	a
      000719 34s00            [12] 2248 	addc	a,#(_DIDBuffer >> 8)
      00071B F5 83            [12] 2249 	mov	dph,a
      00071D E5 AE            [12] 2250 	mov	a,_IAPFD
      00071F F0               [24] 2251 	movx	@dptr,a
                                   2252 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:486: IAPAL++;
      000720 E5 A6            [12] 2253 	mov	a,_IAPAL
      000722 04               [12] 2254 	inc	a
      000723 F5 A6            [12] 2255 	mov	_IAPAL,a
                                   2256 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:481: for (u8Count = 0; u8Count < 4; u8Count++)
      000725 0F               [12] 2257 	inc	r7
      000726 BF 04 00         [24] 2258 	cjne	r7,#0x04,00115$
      000729                       2259 00115$:
      000729 40 DE            [24] 2260 	jc	00102$
                                   2261 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:489: clr_CHPCON_IAPEN;
      00072B 75 91 00         [24] 2262 	mov	_SFRS,#0x00
                                   2263 ;	assignBit
      00072E A2 AF            [12] 2264 	mov	c,_EA
      000730 92*00            [24] 2265 	mov	_BIT_TMP,c
                                   2266 ;	assignBit
      000732 C2 AF            [12] 2267 	clr	_EA
      000734 75 C7 AA         [24] 2268 	mov	_TA,#0xaa
      000737 75 C7 55         [24] 2269 	mov	_TA,#0x55
      00073A 53 9F FE         [24] 2270 	anl	_CHPCON,#0xfe
                                   2271 ;	assignBit
      00073D A2*00            [12] 2272 	mov	c,_BIT_TMP
      00073F 92 AF            [24] 2273 	mov	_EA,c
                                   2274 ;	..\..\..\..\..\Library\StdDriver\src\IAP.c:490: }
      000741 22               [24] 2275 	ret
                                   2276 	.area CSEG    (CODE)
                                   2277 	.area CONST   (CODE)
                                   2278 	.area XINIT   (CODE)
                                   2279 	.area CABS    (ABS,CODE)
